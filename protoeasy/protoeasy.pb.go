// Code generated by protoc-gen-go.
// source: protoeasy.proto
// DO NOT EDIT!

/*
Package protoeasy is a generated protocol buffer package.

It is generated from these files:
	protoeasy.proto

It has these top-level messages:
	CompileOptions
	Command
*/
package protoeasy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type GoPluginType int32

const (
	GoPluginType_GO_PLUGIN_TYPE_NONE   GoPluginType = 0
	GoPluginType_GO_PLUGIN_TYPE_GO     GoPluginType = 1
	GoPluginType_GO_PLUGIN_TYPE_GOFAST GoPluginType = 2
)

var GoPluginType_name = map[int32]string{
	0: "GO_PLUGIN_TYPE_NONE",
	1: "GO_PLUGIN_TYPE_GO",
	2: "GO_PLUGIN_TYPE_GOFAST",
}
var GoPluginType_value = map[string]int32{
	"GO_PLUGIN_TYPE_NONE":   0,
	"GO_PLUGIN_TYPE_GO":     1,
	"GO_PLUGIN_TYPE_GOFAST": 2,
}

func (x GoPluginType) String() string {
	return proto.EnumName(GoPluginType_name, int32(x))
}
func (GoPluginType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GogoPluginType int32

const (
	GogoPluginType_GOGO_PLUGIN_TYPE_NONE       GogoPluginType = 0
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGO       GogoPluginType = 1
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGOFAST   GogoPluginType = 2
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGOFASTER GogoPluginType = 3
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGOSLICK  GogoPluginType = 4
)

var GogoPluginType_name = map[int32]string{
	0: "GOGO_PLUGIN_TYPE_NONE",
	1: "GOGO_PLUGIN_TYPE_GOGO",
	2: "GOGO_PLUGIN_TYPE_GOGOFAST",
	3: "GOGO_PLUGIN_TYPE_GOGOFASTER",
	4: "GOGO_PLUGIN_TYPE_GOGOSLICK",
}
var GogoPluginType_value = map[string]int32{
	"GOGO_PLUGIN_TYPE_NONE":       0,
	"GOGO_PLUGIN_TYPE_GOGO":       1,
	"GOGO_PLUGIN_TYPE_GOGOFAST":   2,
	"GOGO_PLUGIN_TYPE_GOGOFASTER": 3,
	"GOGO_PLUGIN_TYPE_GOGOSLICK":  4,
}

func (x GogoPluginType) String() string {
	return proto.EnumName(GogoPluginType_name, int32(x))
}
func (GogoPluginType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CompileOptions struct {
	Grpc                        bool              `protobuf:"varint,1,opt,name=grpc" json:"grpc,omitempty"`
	GrpcGateway                 bool              `protobuf:"varint,2,opt,name=grpc_gateway,json=grpcGateway" json:"grpc_gateway,omitempty"`
	NoDefaultIncludes           bool              `protobuf:"varint,3,opt,name=no_default_includes,json=noDefaultIncludes" json:"no_default_includes,omitempty"`
	ExcludePattern              []string          `protobuf:"bytes,4,rep,name=exclude_pattern,json=excludePattern" json:"exclude_pattern,omitempty"`
	RelContext                  string            `protobuf:"bytes,5,opt,name=rel_context,json=relContext" json:"rel_context,omitempty"`
	Cpp                         bool              `protobuf:"varint,20,opt,name=cpp" json:"cpp,omitempty"`
	CppRelOut                   string            `protobuf:"bytes,21,opt,name=cpp_rel_out,json=cppRelOut" json:"cpp_rel_out,omitempty"`
	Csharp                      bool              `protobuf:"varint,30,opt,name=csharp" json:"csharp,omitempty"`
	CsharpRelOut                string            `protobuf:"bytes,31,opt,name=csharp_rel_out,json=csharpRelOut" json:"csharp_rel_out,omitempty"`
	Go                          bool              `protobuf:"varint,40,opt,name=go" json:"go,omitempty"`
	GoPluginType                GoPluginType      `protobuf:"varint,41,opt,name=go_plugin_type,json=goPluginType,enum=protoeasy.GoPluginType" json:"go_plugin_type,omitempty"`
	GoRelOut                    string            `protobuf:"bytes,42,opt,name=go_rel_out,json=goRelOut" json:"go_rel_out,omitempty"`
	GoImportPath                string            `protobuf:"bytes,43,opt,name=go_import_path,json=goImportPath" json:"go_import_path,omitempty"`
	GoNoDefaultModifiers        bool              `protobuf:"varint,44,opt,name=go_no_default_modifiers,json=goNoDefaultModifiers" json:"go_no_default_modifiers,omitempty"`
	GoModifiers                 map[string]string `protobuf:"bytes,45,rep,name=go_modifiers,json=goModifiers" json:"go_modifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Gogo                        bool              `protobuf:"varint,50,opt,name=gogo" json:"gogo,omitempty"`
	GogoPluginType              GogoPluginType    `protobuf:"varint,51,opt,name=gogo_plugin_type,json=gogoPluginType,enum=protoeasy.GogoPluginType" json:"gogo_plugin_type,omitempty"`
	GogoRelOut                  string            `protobuf:"bytes,52,opt,name=gogo_rel_out,json=gogoRelOut" json:"gogo_rel_out,omitempty"`
	GogoImportPath              string            `protobuf:"bytes,53,opt,name=gogo_import_path,json=gogoImportPath" json:"gogo_import_path,omitempty"`
	GogoNoDefaultModifiers      bool              `protobuf:"varint,54,opt,name=gogo_no_default_modifiers,json=gogoNoDefaultModifiers" json:"gogo_no_default_modifiers,omitempty"`
	GogoModifiers               map[string]string `protobuf:"bytes,55,rep,name=gogo_modifiers,json=gogoModifiers" json:"gogo_modifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Objc                        bool              `protobuf:"varint,60,opt,name=objc" json:"objc,omitempty"`
	ObjcRelOut                  string            `protobuf:"bytes,61,opt,name=objc_rel_out,json=objcRelOut" json:"objc_rel_out,omitempty"`
	Python                      bool              `protobuf:"varint,70,opt,name=python" json:"python,omitempty"`
	PythonRelOut                string            `protobuf:"bytes,71,opt,name=python_rel_out,json=pythonRelOut" json:"python_rel_out,omitempty"`
	Ruby                        bool              `protobuf:"varint,80,opt,name=ruby" json:"ruby,omitempty"`
	RubyRelOut                  string            `protobuf:"bytes,81,opt,name=ruby_rel_out,json=rubyRelOut" json:"ruby_rel_out,omitempty"`
	DescriptorSet               bool              `protobuf:"varint,90,opt,name=descriptor_set,json=descriptorSet" json:"descriptor_set,omitempty"`
	DescriptorSetRelOut         string            `protobuf:"bytes,91,opt,name=descriptor_set_rel_out,json=descriptorSetRelOut" json:"descriptor_set_rel_out,omitempty"`
	DescriptorSetFileName       string            `protobuf:"bytes,92,opt,name=descriptor_set_file_name,json=descriptorSetFileName" json:"descriptor_set_file_name,omitempty"`
	DescriptorSetIncludeImports bool              `protobuf:"varint,93,opt,name=descriptor_set_include_imports,json=descriptorSetIncludeImports" json:"descriptor_set_include_imports,omitempty"`
	Letmegrpc                   bool              `protobuf:"varint,100,opt,name=letmegrpc" json:"letmegrpc,omitempty"`
	LetmegrpcRelOut             string            `protobuf:"bytes,101,opt,name=letmegrpc_rel_out,json=letmegrpcRelOut" json:"letmegrpc_rel_out,omitempty"`
	LetmegrpcImportPath         string            `protobuf:"bytes,102,opt,name=letmegrpc_import_path,json=letmegrpcImportPath" json:"letmegrpc_import_path,omitempty"`
	LetmegrpcNoDefaultModifiers bool              `protobuf:"varint,103,opt,name=letmegrpc_no_default_modifiers,json=letmegrpcNoDefaultModifiers" json:"letmegrpc_no_default_modifiers,omitempty"`
	LetmegrpcModifiers          map[string]string `protobuf:"bytes,104,rep,name=letmegrpc_modifiers,json=letmegrpcModifiers" json:"letmegrpc_modifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OperatorCmd                 bool              `protobuf:"varint,110,opt,name=operator_cmd,json=operatorCmd" json:"operator_cmd,omitempty"`
	OperatorCmdOut              string            `protobuf:"bytes,111,opt,name=operator_cmd_out,json=operatorCmdOut" json:"operator_cmd_out,omitempty"`
	OperatorHubot               bool              `protobuf:"varint,120,opt,name=operator_hubot,json=operatorHubot" json:"operator_hubot,omitempty"`
	OperatorHubotOut            string            `protobuf:"bytes,121,opt,name=operator_hubot_out,json=operatorHubotOut" json:"operator_hubot_out,omitempty"`
	OperatorLocal               bool              `protobuf:"varint,130,opt,name=operator_local,json=operatorLocal" json:"operator_local,omitempty"`
	OperatorLocalOut            string            `protobuf:"bytes,131,opt,name=operator_local_out,json=operatorLocalOut" json:"operator_local_out,omitempty"`
	OperatorServer              bool              `protobuf:"varint,140,opt,name=operator_server,json=operatorServer" json:"operator_server,omitempty"`
	OperatorServerOut           string            `protobuf:"bytes,141,opt,name=operator_server_out,json=operatorServerOut" json:"operator_server_out,omitempty"`
}

func (m *CompileOptions) Reset()                    { *m = CompileOptions{} }
func (m *CompileOptions) String() string            { return proto.CompactTextString(m) }
func (*CompileOptions) ProtoMessage()               {}
func (*CompileOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CompileOptions) GetGoModifiers() map[string]string {
	if m != nil {
		return m.GoModifiers
	}
	return nil
}

func (m *CompileOptions) GetGogoModifiers() map[string]string {
	if m != nil {
		return m.GogoModifiers
	}
	return nil
}

func (m *CompileOptions) GetLetmegrpcModifiers() map[string]string {
	if m != nil {
		return m.LetmegrpcModifiers
	}
	return nil
}

type Command struct {
	Arg []string `protobuf:"bytes,1,rep,name=arg" json:"arg,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*CompileOptions)(nil), "protoeasy.CompileOptions")
	proto.RegisterType((*Command)(nil), "protoeasy.Command")
	proto.RegisterEnum("protoeasy.GoPluginType", GoPluginType_name, GoPluginType_value)
	proto.RegisterEnum("protoeasy.GogoPluginType", GogoPluginType_name, GogoPluginType_value)
}

var fileDescriptor0 = []byte{
	// 1015 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0x5d, 0x73, 0xdb, 0x44,
	0x14, 0xc5, 0x49, 0x5b, 0xea, 0x9b, 0x54, 0x51, 0x36, 0x71, 0xb2, 0x49, 0x20, 0x0d, 0x9d, 0x02,
	0xc1, 0xa4, 0xc9, 0x90, 0x50, 0x0a, 0x0c, 0x65, 0x60, 0x8c, 0x63, 0x32, 0xa4, 0xb6, 0xb1, 0xc3,
	0x43, 0xf9, 0x18, 0x8d, 0x2c, 0xaf, 0x65, 0x83, 0xac, 0xd5, 0x48, 0xab, 0x12, 0xbf, 0xc2, 0x2b,
	0xfc, 0x0d, 0xfe, 0x0a, 0x7f, 0x8b, 0xdd, 0xbb, 0xb2, 0xbc, 0x72, 0x1c, 0x66, 0xfa, 0xa4, 0xbb,
	0xe7, 0x9e, 0x73, 0x77, 0xf7, 0xfa, 0xec, 0xae, 0x61, 0x2d, 0x8a, 0xb9, 0xe0, 0xcc, 0x4d, 0x26,
	0xc7, 0x18, 0x91, 0x72, 0x0e, 0xec, 0xee, 0xfb, 0x9c, 0xfb, 0x01, 0x3b, 0x41, 0xa4, 0x97, 0x0e,
	0x4e, 0xfa, 0x69, 0xec, 0x8a, 0x11, 0x0f, 0x35, 0xf5, 0xd1, 0xbf, 0x36, 0x58, 0x35, 0x3e, 0x8e,
	0x46, 0x01, 0x6b, 0x45, 0x0a, 0x4f, 0x08, 0x81, 0x3b, 0x7e, 0x1c, 0x79, 0xb4, 0x74, 0x50, 0x3a,
	0xbc, 0xdf, 0xc1, 0x98, 0xbc, 0x03, 0xab, 0xea, 0xeb, 0xf8, 0xae, 0x60, 0xbf, 0xbb, 0x13, 0xba,
	0x84, 0xb9, 0x15, 0x85, 0x35, 0x34, 0x44, 0x8e, 0x61, 0x23, 0xe4, 0x4e, 0x9f, 0x0d, 0xdc, 0x34,
	0x10, 0xce, 0x28, 0xf4, 0x82, 0xb4, 0xcf, 0x12, 0xba, 0x8c, 0xcc, 0xf5, 0x90, 0x7f, 0xa3, 0x33,
	0x17, 0x59, 0x82, 0xbc, 0x0f, 0x6b, 0xec, 0x1a, 0x63, 0x27, 0x72, 0x85, 0x60, 0x71, 0x48, 0xef,
	0x1c, 0x2c, 0x1f, 0x96, 0x3b, 0x56, 0x06, 0xb7, 0x35, 0x4a, 0x1e, 0xc2, 0x4a, 0xcc, 0x02, 0xc7,
	0xe3, 0xa1, 0x60, 0xd7, 0x82, 0xde, 0x95, 0x05, 0xcb, 0x1d, 0x90, 0x50, 0x4d, 0x23, 0xc4, 0x86,
	0x65, 0x2f, 0x8a, 0xe8, 0x26, 0xce, 0xa4, 0x42, 0xb2, 0x0f, 0x2b, 0xf2, 0xe3, 0x28, 0x19, 0x4f,
	0x05, 0xad, 0xa0, 0xa4, 0x2c, 0xa1, 0x0e, 0x0b, 0x5a, 0xa9, 0x20, 0x5b, 0x70, 0xcf, 0x4b, 0x86,
	0x6e, 0x1c, 0xd1, 0x7d, 0x14, 0x65, 0x23, 0xf2, 0x18, 0x2c, 0x1d, 0xe5, 0xd2, 0x87, 0x28, 0x5d,
	0xd5, 0x68, 0xa6, 0xb6, 0x60, 0xc9, 0xe7, 0xf4, 0x10, 0x95, 0x32, 0x22, 0xcf, 0xc1, 0xf2, 0xb9,
	0x13, 0x05, 0xa9, 0x3f, 0x0a, 0x1d, 0x31, 0x89, 0x18, 0xfd, 0x40, 0xe6, 0xac, 0xd3, 0xed, 0xe3,
	0xd9, 0x0f, 0xd3, 0xe0, 0x6d, 0xcc, 0x5f, 0xc9, 0x74, 0x67, 0xd5, 0x37, 0x46, 0xe4, 0x2d, 0x00,
	0x29, 0x9f, 0x4e, 0x58, 0xc5, 0x09, 0xef, 0xfb, 0x3c, 0x9b, 0xec, 0x31, 0x16, 0x1f, 0x8d, 0x23,
	0x1e, 0x0b, 0xd5, 0xa8, 0x21, 0xfd, 0x50, 0x2f, 0xc9, 0xe7, 0x17, 0x08, 0xca, 0x36, 0x0d, 0xc9,
	0x53, 0xd8, 0x96, 0x2c, 0xa3, 0xff, 0x63, 0xde, 0x1f, 0x0d, 0x46, 0x2c, 0x4e, 0xe8, 0x11, 0xae,
	0x73, 0xd3, 0xe7, 0xcd, 0xe9, 0x4f, 0xf0, 0x62, 0x9a, 0x23, 0x2f, 0xe4, 0xcf, 0xca, 0x0d, 0xee,
	0x13, 0xf9, 0x03, 0xac, 0x9c, 0x56, 0x8d, 0x75, 0x17, 0xbd, 0x21, 0xb7, 0x91, 0x8b, 0xeb, 0xa1,
	0x88, 0x27, 0xd2, 0x02, 0x33, 0x04, 0x9d, 0xc3, 0x65, 0x6b, 0x4e, 0x33, 0xe7, 0xc8, 0x98, 0xd4,
	0xc0, 0x56, 0xdf, 0x42, 0x7b, 0xce, 0xb0, 0x3d, 0x3b, 0x85, 0xf6, 0x98, 0x2d, 0xe9, 0x58, 0x7e,
	0x61, 0x4c, 0x0e, 0xd4, 0x3a, 0x8d, 0x26, 0x7d, 0xac, 0x3d, 0xa0, 0xb0, 0xac, 0x4d, 0x87, 0xd9,
	0x34, 0x66, 0xa3, 0x9e, 0x22, 0x0b, 0x6b, 0x19, 0xad, 0xfa, 0x0c, 0x76, 0x90, 0xb9, 0xb0, 0x59,
	0x9f, 0xe0, 0xca, 0xb7, 0x14, 0x61, 0x41, 0xbb, 0xba, 0x80, 0xc5, 0x0c, 0xfe, 0x33, 0x6c, 0xd8,
	0xd1, 0xff, 0x35, 0xcc, 0x9f, 0x6f, 0xd9, 0x03, 0x9f, 0xcf, 0x35, 0x8d, 0xf7, 0x7e, 0xf5, 0xe8,
	0x17, 0xba, 0x69, 0x2a, 0x56, 0xfb, 0x55, 0xdf, 0x7c, 0xbf, 0xcf, 0xf5, 0x7e, 0x15, 0x36, 0x73,
	0x70, 0x34, 0x11, 0x43, 0x1e, 0xd2, 0x73, 0xed, 0x60, 0x3d, 0x52, 0x76, 0xd1, 0x51, 0xae, 0x6d,
	0x68, 0xbb, 0x68, 0x34, 0x53, 0xcb, 0x39, 0xe3, 0xb4, 0x37, 0xa1, 0x6d, 0x3d, 0xa7, 0x8a, 0xd5,
	0x9c, 0xea, 0x9b, 0xeb, 0xbe, 0xcf, 0xce, 0x99, 0xc4, 0x32, 0xd5, 0xbb, 0x60, 0xc9, 0x83, 0xeb,
	0xc5, 0xa3, 0x48, 0xf0, 0xd8, 0x49, 0x98, 0xa0, 0x3f, 0xa2, 0xfe, 0xc1, 0x0c, 0xed, 0x32, 0x41,
	0xce, 0x60, 0xab, 0x48, 0xcb, 0x4b, 0xfe, 0x84, 0x25, 0x37, 0x0a, 0xf4, 0xac, 0xf6, 0x33, 0xa0,
	0x73, 0xa2, 0x81, 0xec, 0xa2, 0x13, 0xba, 0x63, 0x46, 0x7f, 0x46, 0x59, 0xa5, 0x20, 0x3b, 0x97,
	0xd9, 0xa6, 0x4c, 0x4a, 0x7f, 0xed, 0xcf, 0x09, 0xb3, 0xab, 0x27, 0xb3, 0x42, 0x42, 0x7f, 0xc1,
	0x45, 0xee, 0x15, 0xe4, 0xd9, 0x2d, 0xa4, 0x6d, 0x91, 0xc8, 0x23, 0x58, 0x0e, 0x98, 0x18, 0x33,
	0xbc, 0xf7, 0xfa, 0xc8, 0x9f, 0x01, 0xa4, 0x0a, 0xeb, 0xf9, 0x20, 0xdf, 0x0b, 0xc3, 0x45, 0xad,
	0xe5, 0x89, 0x6c, 0x1f, 0xa7, 0x50, 0x99, 0x71, 0x4d, 0x33, 0x0e, 0xf4, 0xde, 0xf3, 0xa4, 0xe1,
	0x48, 0xb9, 0x85, 0x99, 0x66, 0xa1, 0x2d, 0x7d, 0xbd, 0x85, 0x9c, 0xb5, 0xc0, 0x9b, 0x3d, 0x98,
	0xd5, 0x36, 0x94, 0x43, 0x34, 0xe8, 0x47, 0xb7, 0x1b, 0xf4, 0x72, 0x2a, 0x9a, 0x73, 0x29, 0x09,
	0x6e, 0x24, 0xd4, 0x2b, 0xc0, 0x23, 0x26, 0xdf, 0x0f, 0xd9, 0x69, 0x6f, 0xdc, 0xa7, 0xa1, 0x7e,
	0x05, 0xa6, 0x58, 0x6d, 0xdc, 0x57, 0xe7, 0xd0, 0xa4, 0x60, 0xab, 0xb8, 0x3e, 0x87, 0x06, 0x2d,
	0x73, 0x53, 0xce, 0x1c, 0xa6, 0x3d, 0x2e, 0xe8, 0xb5, 0x76, 0xd3, 0x14, 0xfd, 0x56, 0x81, 0xe4,
	0x08, 0x48, 0x91, 0x86, 0x25, 0x27, 0x58, 0xd2, 0x2e, 0x50, 0x55, 0xd1, 0xf7, 0x8c, 0xa2, 0x01,
	0xf7, 0xdc, 0x80, 0xfe, 0x51, 0x2a, 0x56, 0xbd, 0x54, 0x28, 0x79, 0x62, 0x54, 0x45, 0x1e, 0x56,
	0xfd, 0xb3, 0x54, 0x2c, 0x8b, 0x5c, 0x7d, 0xbb, 0xac, 0xe5, 0xf4, 0x84, 0xc5, 0xaf, 0x58, 0x4c,
	0xff, 0xd2, 0x75, 0xf3, 0xe9, 0xba, 0x08, 0x93, 0x13, 0xd8, 0x98, 0x63, 0x62, 0xe5, 0xbf, 0x75,
	0xe5, 0xf5, 0x22, 0x5b, 0x96, 0xde, 0xfd, 0x12, 0xec, 0xf9, 0x4b, 0x55, 0x3d, 0x68, 0xbf, 0xb1,
	0x09, 0xd5, 0x1a, 0x15, 0x92, 0x4d, 0xb8, 0xfb, 0xca, 0x0d, 0x52, 0x86, 0x0f, 0x6f, 0xb9, 0xa3,
	0x07, 0x9f, 0x2f, 0x7d, 0x5a, 0xda, 0xfd, 0x0a, 0xc8, 0xcd, 0x3b, 0xe6, 0xb5, 0x2a, 0xd4, 0x61,
	0xfb, 0x16, 0x13, 0xbc, 0x4e, 0x99, 0x47, 0x7b, 0xf0, 0xa6, 0xb4, 0xd6, 0xd8, 0x0d, 0xfb, 0x4a,
	0xe6, 0xc6, 0xbe, 0x94, 0xa9, 0xe7, 0x5c, 0x85, 0xd5, 0x97, 0xb0, 0x6a, 0xbe, 0x80, 0x64, 0x1b,
	0x36, 0x1a, 0x2d, 0xa7, 0x7d, 0xf9, 0x43, 0xe3, 0xa2, 0xe9, 0x5c, 0xbd, 0x6c, 0xd7, 0x9d, 0x66,
	0xab, 0x59, 0xb7, 0xdf, 0x20, 0x15, 0x58, 0x9f, 0x4b, 0x34, 0x5a, 0x76, 0x89, 0xec, 0x40, 0xe5,
	0x06, 0x7c, 0xfe, 0x75, 0xf7, 0xca, 0x5e, 0xaa, 0xfe, 0x53, 0x02, 0xab, 0xf8, 0x7c, 0x68, 0xf6,
	0xe2, 0xfa, 0x8b, 0x52, 0x0a, 0x90, 0x73, 0xbc, 0x0d, 0x3b, 0x0b, 0x53, 0x7a, 0x1e, 0xf9, 0x37,
	0x64, 0xef, 0xd6, 0x74, 0xbd, 0x63, 0x2f, 0xcb, 0x3f, 0x1d, 0xbb, 0x0b, 0x09, 0xdd, 0xcb, 0x8b,
	0xda, 0x77, 0xf6, 0x9d, 0xde, 0x3d, 0x3c, 0x83, 0x67, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x01,
	0xf4, 0x50, 0xa1, 0xaf, 0x09, 0x00, 0x00,
}
