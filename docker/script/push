#!/usr/bin/env ruby

require "yaml"
require "optparse"
require "thread"

THREADS = 3

all = false
parser = OptionParser.new { |opts|
  opts.banner = "Usage: push [--all] image [image...]"

  opts.on("-a", "--all", "Push all images") do
    all = true
  end
}
parser.parse!

if !all && ARGV.length == 0
  puts parser.help
  abort
end

all_images = YAML.load_file(File.join(File.dirname(__FILE__), "..", "images.yml")).fetch("images")
images = all ? all_images.keys : ARGV

images.each do |image|
  unless all_images.key?(image)
    puts "error: #{image} not defined in images.yml"
    abort
  end
end

image_queue = Queue.new
images.each { |i| image_queue << i }

threads = THREADS.times.map { |t|
  Thread.new do
    until images.empty?
      begin
        image = image_queue.pop(true)

        pid = Process.spawn(
          File.join(File.dirname(__FILE__), "docker"),
          "push",
          image,
          close_others: true
        )

        Process.waitpid(pid)
        exit $?.exitstatus unless $?.success?
      rescue ThreadError
        break # queue is empty; we're done here
      end
    end
  end
}

threads.each(&:join)
