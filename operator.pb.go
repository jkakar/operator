// Code generated by protoc-gen-go.
// source: operator.proto
// DO NOT EDIT!

/*
Package operator is a generated protocol buffer package.

It is generated from these files:
	operator.proto

It has these top-level messages:
	Request
	Source
	Room
	User
	Output
	ServerStartupNotice
	Service
	ServerStartupError
	ServiceRegistered
	ServiceStartupError
*/
package operator

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"
import grpcinstrument "github.com/sr/grpcinstrument"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SourceType int32

const (
	SourceType_HUBOT_SLACK SourceType = 0
	SourceType_COMMAND     SourceType = 1
)

var SourceType_name = map[int32]string{
	0: "HUBOT_SLACK",
	1: "COMMAND",
}
var SourceType_value = map[string]int32{
	"HUBOT_SLACK": 0,
	"COMMAND":     1,
}

func (x SourceType) String() string {
	return proto.EnumName(SourceType_name, int32(x))
}
func (SourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Request struct {
	Source *Source              `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Call   *grpcinstrument.Call `protobuf:"bytes,2,opt,name=call" json:"call,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Request) GetCall() *grpcinstrument.Call {
	if m != nil {
		return m.Call
	}
	return nil
}

type Source struct {
	Type SourceType `protobuf:"varint,1,opt,name=type,enum=operator.SourceType" json:"type,omitempty"`
	User *User      `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Room *Room      `protobuf:"bytes,3,opt,name=room" json:"room,omitempty"`
}

func (m *Source) Reset()                    { *m = Source{} }
func (m *Source) String() string            { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()               {}
func (*Source) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Source) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Source) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

type Room struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type User struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Login    string `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	RealName string `protobuf:"bytes,3,opt,name=real_name" json:"real_name,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Output struct {
	PlainText string `protobuf:"bytes,1,opt,name=PlainText" json:"PlainText,omitempty"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ServerStartupNotice struct {
	Address  string     `protobuf:"bytes,1,opt,name=Address" json:"Address,omitempty"`
	Protocol string     `protobuf:"bytes,2,opt,name=Protocol" json:"Protocol,omitempty"`
	Services []*Service `protobuf:"bytes,3,rep,name=services" json:"services,omitempty"`
}

func (m *ServerStartupNotice) Reset()                    { *m = ServerStartupNotice{} }
func (m *ServerStartupNotice) String() string            { return proto.CompactTextString(m) }
func (*ServerStartupNotice) ProtoMessage()               {}
func (*ServerStartupNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ServerStartupNotice) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type Service struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ServerStartupError struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *ServerStartupError) Reset()                    { *m = ServerStartupError{} }
func (m *ServerStartupError) String() string            { return proto.CompactTextString(m) }
func (*ServerStartupError) ProtoMessage()               {}
func (*ServerStartupError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ServiceRegistered struct {
	Service *Service `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *ServiceRegistered) Reset()                    { *m = ServiceRegistered{} }
func (m *ServiceRegistered) String() string            { return proto.CompactTextString(m) }
func (*ServiceRegistered) ProtoMessage()               {}
func (*ServiceRegistered) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ServiceRegistered) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type ServiceStartupError struct {
	Service *Service `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ServiceStartupError) Reset()                    { *m = ServiceStartupError{} }
func (m *ServiceStartupError) String() string            { return proto.CompactTextString(m) }
func (*ServiceStartupError) ProtoMessage()               {}
func (*ServiceStartupError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ServiceStartupError) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

var E_Name = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         51234,
	Name:          "operator.name",
	Tag:           "bytes,51234,opt,name=name",
}

func init() {
	proto.RegisterType((*Request)(nil), "operator.Request")
	proto.RegisterType((*Source)(nil), "operator.Source")
	proto.RegisterType((*Room)(nil), "operator.Room")
	proto.RegisterType((*User)(nil), "operator.User")
	proto.RegisterType((*Output)(nil), "operator.Output")
	proto.RegisterType((*ServerStartupNotice)(nil), "operator.ServerStartupNotice")
	proto.RegisterType((*Service)(nil), "operator.Service")
	proto.RegisterType((*ServerStartupError)(nil), "operator.ServerStartupError")
	proto.RegisterType((*ServiceRegistered)(nil), "operator.ServiceRegistered")
	proto.RegisterType((*ServiceStartupError)(nil), "operator.ServiceStartupError")
	proto.RegisterEnum("operator.SourceType", SourceType_name, SourceType_value)
	proto.RegisterExtension(E_Name)
}

var fileDescriptor0 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0xd9, 0x1a, 0x9a, 0xf6, 0x0a, 0x5d, 0x6b, 0x26, 0x11, 0x0d, 0x24, 0xaa, 0x20, 0x24,
	0xb4, 0x87, 0x44, 0x82, 0x07, 0x10, 0x6f, 0x5d, 0x41, 0x42, 0xc0, 0x96, 0xa9, 0xed, 0x5e, 0x90,
	0xd0, 0x94, 0x26, 0x47, 0x66, 0x29, 0x89, 0xc3, 0xd9, 0xa9, 0xe0, 0x5b, 0xf0, 0x19, 0xf8, 0xa4,
	0x38, 0x4e, 0xd2, 0x75, 0x11, 0x0f, 0x3c, 0xc5, 0xbe, 0xfb, 0xdf, 0xfd, 0xfc, 0xf7, 0x39, 0x30,
	0x16, 0x05, 0x52, 0xa8, 0x04, 0x79, 0x05, 0x09, 0x25, 0xd8, 0xa0, 0xdd, 0x9f, 0xcc, 0x12, 0x21,
	0x92, 0x14, 0x7d, 0x13, 0xdf, 0x94, 0xdf, 0xfd, 0x18, 0x65, 0x44, 0xbc, 0xd8, 0x69, 0x4f, 0xde,
	0x6e, 0x31, 0x8f, 0x05, 0xf9, 0x09, 0x57, 0x37, 0xe5, 0xc6, 0x8b, 0x44, 0xe6, 0x4b, 0xbd, 0xa3,
	0x22, 0xe2, 0xb9, 0x54, 0x54, 0x66, 0x98, 0xab, 0xce, 0xb6, 0xae, 0x74, 0x03, 0xb0, 0x97, 0xf8,
	0xa3, 0x44, 0xa9, 0xd8, 0x0c, 0xfa, 0x52, 0x94, 0x14, 0xa1, 0x73, 0x30, 0x3b, 0x78, 0x39, 0x7a,
	0x35, 0xf1, 0x76, 0x27, 0x5a, 0x99, 0x38, 0x73, 0xc1, 0x8a, 0xc2, 0x34, 0x75, 0x0e, 0x4d, 0xfe,
	0xd8, 0xeb, 0x74, 0x5c, 0xe8, 0x9c, 0x7b, 0x03, 0xfd, 0x5b, 0xb5, 0xfa, 0x55, 0xd4, 0xdd, 0xc6,
	0x5a, 0xdd, 0xe9, 0xb6, 0xd6, 0x39, 0xf6, 0x14, 0xac, 0x52, 0x22, 0x35, 0x1d, 0xc7, 0xb7, 0x9a,
	0x2b, 0x1d, 0xad, 0xb2, 0x24, 0x44, 0xe6, 0xf4, 0xba, 0xd9, 0xa5, 0x8e, 0xba, 0xc7, 0x60, 0x55,
	0x5f, 0xf6, 0x00, 0xac, 0x3c, 0xcc, 0x6a, 0xce, 0xd0, 0x5d, 0x80, 0x65, 0x6a, 0x01, 0x0e, 0x79,
	0x5c, 0xc7, 0xd8, 0x43, 0xb8, 0x9f, 0x8a, 0x84, 0xe7, 0x06, 0x33, 0x64, 0x53, 0x18, 0x12, 0x86,
	0xe9, 0xb5, 0xa9, 0xea, 0xb5, 0x0a, 0xcc, 0x42, 0x9e, 0x3a, 0x96, 0x69, 0xf2, 0x04, 0xfa, 0x41,
	0xa9, 0x8a, 0x52, 0x55, 0xda, 0xcb, 0x34, 0xe4, 0xf9, 0x1a, 0x7f, 0xaa, 0x86, 0xf0, 0x0d, 0x1e,
	0xad, 0x90, 0xb6, 0x48, 0x2b, 0x15, 0x92, 0x2a, 0x8b, 0x0b, 0xa1, 0xb8, 0xb6, 0x7b, 0x04, 0xf6,
	0x3c, 0x8e, 0x09, 0xa5, 0x6c, 0xa8, 0x13, 0x18, 0x5c, 0x56, 0x77, 0x1c, 0x89, 0xb4, 0x01, 0x3f,
	0x87, 0x81, 0x3e, 0xda, 0x56, 0xab, 0xa5, 0xe6, 0xf6, 0xb4, 0xa7, 0xe9, 0xde, 0xad, 0xd4, 0x19,
	0xf7, 0x31, 0xd8, 0xcd, 0xb2, 0xe3, 0xec, 0x05, 0xb0, 0x3b, 0xdc, 0x0f, 0x44, 0x82, 0x2a, 0x6c,
	0xa6, 0x99, 0x61, 0xd2, 0xca, 0xde, 0xc0, 0xb4, 0xa9, 0x5f, 0x62, 0xc2, 0xa5, 0x42, 0xc2, 0x58,
	0xcf, 0xc2, 0x6e, 0xc8, 0xcd, 0x70, 0xff, 0x01, 0xfe, 0x54, 0xfb, 0xd2, 0xcb, 0x3b, 0x80, 0xff,
	0x28, 0xdd, 0x3f, 0x84, 0x71, 0x7a, 0x7a, 0x0a, 0xb0, 0x37, 0xe5, 0x23, 0x18, 0x7d, 0xbc, 0x3a,
	0x0b, 0xd6, 0xd7, 0xab, 0x2f, 0xf3, 0xc5, 0xe7, 0xc9, 0x3d, 0x36, 0x02, 0x7b, 0x11, 0x9c, 0x9f,
	0xcf, 0x2f, 0xde, 0x4f, 0x0e, 0xde, 0xf9, 0xb5, 0x4b, 0xf6, 0xcc, 0xab, 0xdf, 0xb9, 0xd7, 0xbe,
	0xf3, 0xb6, 0x7d, 0x50, 0x28, 0x2e, 0x72, 0xe9, 0xfc, 0xf9, 0x6d, 0x86, 0x75, 0x06, 0x5f, 0x77,
	0xff, 0xc6, 0xa6, 0x6f, 0xc4, 0xaf, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x4d, 0x1c, 0x54,
	0x3e, 0x03, 0x00, 0x00,
}
