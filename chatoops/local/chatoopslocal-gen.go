// Code generated by protoc-gen-operatorlocal
package chatoopslocal

import (
	"github.com/sr/operator/chatoops/services/buildkite"
	"github.com/sr/operator/chatoops/services/gcloud"
	"github.com/sr/operator/chatoops/services/papertrail"
	"golang.org/x/net/context"
	"google.golang.org/grpc"
)

type BuildkiteServiceClient struct {
	server buildkite.BuildkiteServiceServer
}

type GcloudServiceClient struct {
	server gcloud.GcloudServiceServer
}

type PapertrailServiceClient struct {
	server papertrail.PapertrailServiceServer
}

func NewBuildkiteServiceClient(server buildkite.BuildkiteServiceServer) buildkite.BuildkiteServiceClient {
	return &BuildkiteServiceClient{server: server}
}

func NewGcloudServiceClient(server gcloud.GcloudServiceServer) gcloud.GcloudServiceClient {
	return &GcloudServiceClient{server: server}
}

func NewPapertrailServiceClient(server papertrail.PapertrailServiceServer) papertrail.PapertrailServiceClient {
	return &PapertrailServiceClient{server: server}
}

func (c *BuildkiteServiceClient) Status(
	ctx context.Context,
	in *buildkite.StatusRequest,
	opts ...grpc.CallOption,
) (*buildkite.StatusResponse, error) {
	return c.Status(ctx, in)
}

func (c *BuildkiteServiceClient) ListBuilds(
	ctx context.Context,
	in *buildkite.ListBuildsRequest,
	opts ...grpc.CallOption,
) (*buildkite.ListBuildsResponse, error) {
	return c.ListBuilds(ctx, in)
}

func (c *GcloudServiceClient) CreateDevInstance(
	ctx context.Context,
	in *gcloud.CreateDevInstanceRequest,
	opts ...grpc.CallOption,
) (*gcloud.CreateDevInstanceResponse, error) {
	return c.CreateDevInstance(ctx, in)
}

func (c *GcloudServiceClient) ListInstances(
	ctx context.Context,
	in *gcloud.ListInstancesRequest,
	opts ...grpc.CallOption,
) (*gcloud.ListInstancesResponse, error) {
	return c.ListInstances(ctx, in)
}

func (c *GcloudServiceClient) Stop(
	ctx context.Context,
	in *gcloud.StopRequest,
	opts ...grpc.CallOption,
) (*gcloud.StopResponse, error) {
	return c.Stop(ctx, in)
}

func (c *PapertrailServiceClient) Search(
	ctx context.Context,
	in *papertrail.SearchRequest,
	opts ...grpc.CallOption,
) (*papertrail.SearchResponse, error) {
	return c.Search(ctx, in)
}
