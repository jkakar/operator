// Code generated by protoc-gen-operatord
package main

import (
	"errors"
	"flag"
	"os"
	"strings"

	"google.golang.org/grpc"

	"github.com/sr/operator/chatoops/services/buildkite"
	"github.com/sr/operator/chatoops/services/papertrail"
)

func buildOperatorServer(
	server *grpc.Server,
	flags *flag.FlagSet,
) (map[string]error, error) {
	buildkiteConfig := &buildkite.BuildkiteServiceConfig{}
	papertrailConfig := &papertrail.PapertrailServiceConfig{}
	flags.StringVar(&buildkiteConfig.ApiToken, "buildkite-api_token", "", "")
	flags.StringVar(&papertrailConfig.ApiKey, "papertrail-api_key", "", "")
	services := make(map[string]error)
	if err := flags.Parse(os.Args[1:]); err != nil {
		return services, err
	}
	errs := make(map[string][]string)
	if buildkiteConfig.ApiToken == "" {
		errs["buildkite"] = append(errs["buildkite"], "api_token")
	}
	if papertrailConfig.ApiKey == "" {
		errs["papertrail"] = append(errs["papertrail"], "api_key")
	}
	if len(errs["buildkite"]) != 0 {
		services["buildkite"] = errors.New("required flag(s) missing: " + strings.Join(errs["buildkite"], ", "))
	} else {
		buildkiteServer, err := buildkite.NewAPIServer(buildkiteConfig)
		if err != nil {
			services["buildkite"] = err
		} else {
			buildkite.RegisterBuildkiteServiceServer(server, buildkiteServer)
			services["buildkite"] = nil
		}
	}
	if len(errs["papertrail"]) != 0 {
		services["papertrail"] = errors.New("required flag(s) missing: " + strings.Join(errs["papertrail"], ", "))
	} else {
		papertrailServer, err := papertrail.NewAPIServer(papertrailConfig)
		if err != nil {
			services["papertrail"] = err
		} else {
			papertrail.RegisterPapertrailServiceServer(server, papertrailServer)
			services["papertrail"] = nil
		}
	}
	return services, nil
}
