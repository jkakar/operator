// Code generated by protoc-gen-operatord
package main

import (
	"time"

	"github.com/sr/operator"
	"golang.org/x/net/context"

	servicepkg "github.com/sr/operator/chatoops/services/gcloud"
)

type instrumentedgcloudGcloudService struct {
	instrumenter operator.Instrumenter
	server       servicepkg.GcloudServiceServer
}

// CreateContainerCluster instruments the GcloudService.CreateContainerCluster method.
func (a *instrumentedgcloudGcloudService) CreateContainerCluster(
	ctx context.Context,
	request *servicepkg.CreateContainerClusterRequest,
) (response *servicepkg.CreateContainerClusterResponse, err error) {
	defer func(start time.Time) {
		a.instrumenter.Instrument(
			operator.NewRequest(
				request.Source,
				"gcloud",
				"CreateContainerCluster",
				"CreateContainerClusterRequest",
				"CreateContainerClusterResponse",
				err,
				start,
			),
		)
	}(time.Now())
	return a.server.CreateContainerCluster(ctx, request)
}

// ListInstances instruments the GcloudService.ListInstances method.
func (a *instrumentedgcloudGcloudService) ListInstances(
	ctx context.Context,
	request *servicepkg.ListInstancesRequest,
) (response *servicepkg.ListInstancesResponse, err error) {
	defer func(start time.Time) {
		a.instrumenter.Instrument(
			operator.NewRequest(
				request.Source,
				"gcloud",
				"ListInstances",
				"ListInstancesRequest",
				"ListInstancesResponse",
				err,
				start,
			),
		)
	}(time.Now())
	return a.server.ListInstances(ctx, request)
}
