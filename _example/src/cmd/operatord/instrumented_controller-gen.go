// Code generated by protoc-gen-operatord
package main

import (
	"time"

	"github.com/sr/grpcinstrument"
	"github.com/sr/operator"
	"golang.org/x/net/context"

	servicepkg "services/controller"
)

type instrumented_controller_Controller struct {
	instrumentor operator.Instrumentor
	server       servicepkg.ControllerServer
}


// CreateCluster instruments the Controller.CreateCluster method.
func (a *instrumented_controller_Controller) CreateCluster(
	ctx context.Context,
	request *servicepkg.CreateClusterRequest,
) (response *servicepkg.CreateClusterResponse, err error) {
	defer func(start time.Time) {
		a.instrumentor.Instrument(&operator.Request{
			Source: request.Source,
			Call: grpcinstrument.NewCall(
				"controller",
				"CreateCluster",
				"CreateClusterRequest",
				"CreateClusterResponse",
				err,
				start,
			),
		})
	}(time.Now())
	return a.server.CreateCluster(ctx, request)
}

// Deploy instruments the Controller.Deploy method.
func (a *instrumented_controller_Controller) Deploy(
	ctx context.Context,
	request *servicepkg.DeployRequest,
) (response *servicepkg.DeployResponse, err error) {
	defer func(start time.Time) {
		a.instrumentor.Instrument(&operator.Request{
			Source: request.Source,
			Call: grpcinstrument.NewCall(
				"controller",
				"Deploy",
				"DeployRequest",
				"DeployResponse",
				err,
				start,
			),
		})
	}(time.Now())
	return a.server.Deploy(ctx, request)
}
