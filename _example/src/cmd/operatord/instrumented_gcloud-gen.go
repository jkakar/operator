// Code generated by protoc-gen-operatord
package main

import (
	"time"

	"github.com/sr/grpcinstrument"
	"github.com/sr/operator"
	"golang.org/x/net/context"

	servicepkg "services/gcloud"
)

type instrumented_gcloud_GcloudService struct {
	instrumentor operator.Instrumentor
	server       servicepkg.GcloudServiceServer
}


// CreateContainerCluster instruments the GcloudService.CreateContainerCluster method.
func (a *instrumented_gcloud_GcloudService) CreateContainerCluster(
	ctx context.Context,
	request *servicepkg.CreateContainerClusterRequest,
) (response *servicepkg.CreateContainerClusterResponse, err error) {
	defer func(start time.Time) {
		a.instrumentor.Instrument(&operator.Request{
			Source: request.Source,
			Call: grpcinstrument.NewCall(
				"gcloud",
				"CreateContainerCluster",
				"CreateContainerClusterRequest",
				"CreateContainerClusterResponse",
				err,
				start,
			),
		})
	}(time.Now())
	return a.server.CreateContainerCluster(ctx, request)
}

// ListInstances instruments the GcloudService.ListInstances method.
func (a *instrumented_gcloud_GcloudService) ListInstances(
	ctx context.Context,
	request *servicepkg.ListInstancesRequest,
) (response *servicepkg.ListInstancesResponse, err error) {
	defer func(start time.Time) {
		a.instrumentor.Instrument(&operator.Request{
			Source: request.Source,
			Call: grpcinstrument.NewCall(
				"gcloud",
				"ListInstances",
				"ListInstancesRequest",
				"ListInstancesResponse",
				err,
				start,
			),
		})
	}(time.Now())
	return a.server.ListInstances(ctx, request)
}
