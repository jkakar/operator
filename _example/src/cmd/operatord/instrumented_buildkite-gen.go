// Code generated by protoc-gen-operatord
package main

import (
	"time"

	"github.com/sr/grpcinstrument"
	"github.com/sr/operator"
	"golang.org/x/net/context"

	servicepkg "services/buildkite"
)

type instrumented_buildkite_BuildkiteService struct {
	instrumentor operator.Instrumentor
	server       servicepkg.BuildkiteServiceServer
}


// Status instruments the BuildkiteService.Status method.
func (a *instrumented_buildkite_BuildkiteService) Status(
	ctx context.Context,
	request *servicepkg.StatusRequest,
) (response *servicepkg.StatusResponse, err error) {
	defer func(start time.Time) {
		a.instrumentor.Instrument(&operator.Request{
			Source: request.Source,
			Call: grpcinstrument.NewCall(
				"buildkite",
				"Status",
				"StatusRequest",
				"StatusResponse",
				err,
				start,
			),
		})
	}(time.Now())
	return a.server.Status(ctx, request)
}

// ListBuilds instruments the BuildkiteService.ListBuilds method.
func (a *instrumented_buildkite_BuildkiteService) ListBuilds(
	ctx context.Context,
	request *servicepkg.ListBuildsRequest,
) (response *servicepkg.ListBuildsResponse, err error) {
	defer func(start time.Time) {
		a.instrumentor.Instrument(&operator.Request{
			Source: request.Source,
			Call: grpcinstrument.NewCall(
				"buildkite",
				"ListBuilds",
				"ListBuildsRequest",
				"ListBuildsResponse",
				err,
				start,
			),
		})
	}(time.Now())
	return a.server.ListBuilds(ctx, request)
}
