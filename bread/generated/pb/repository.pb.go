// Code generated by protoc-gen-go.
// source: repository.proto
// DO NOT EDIT!

package breadpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RepositoryConfig struct {
	// List of automated test statuses that are required to pass for this
	// repository's build to be considered successful
	RequiredTestingStatuses []string `protobuf:"bytes,1,rep,name=required_testing_statuses,json=requiredTestingStatuses" json:"required_testing_statuses,omitempty"`
	// Watchlists attached to this repository
	Watchlists []*RepositoryWatchlist `protobuf:"bytes,2,rep,name=watchlists" json:"watchlists,omitempty"`
}

func (m *RepositoryConfig) Reset()                    { *m = RepositoryConfig{} }
func (m *RepositoryConfig) String() string            { return proto.CompactTextString(m) }
func (*RepositoryConfig) ProtoMessage()               {}
func (*RepositoryConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *RepositoryConfig) GetRequiredTestingStatuses() []string {
	if m != nil {
		return m.RequiredTestingStatuses
	}
	return nil
}

func (m *RepositoryConfig) GetWatchlists() []*RepositoryWatchlist {
	if m != nil {
		return m.Watchlists
	}
	return nil
}

type RepositoryWatchlist struct {
	// Watchlist label
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// List of Github user/team names of watchers
	Watchers []string `protobuf:"bytes,2,rep,name=watchers" json:"watchers,omitempty"`
	// List of watched file globs
	Files []string `protobuf:"bytes,3,rep,name=files" json:"files,omitempty"`
}

func (m *RepositoryWatchlist) Reset()                    { *m = RepositoryWatchlist{} }
func (m *RepositoryWatchlist) String() string            { return proto.CompactTextString(m) }
func (*RepositoryWatchlist) ProtoMessage()               {}
func (*RepositoryWatchlist) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *RepositoryWatchlist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RepositoryWatchlist) GetWatchers() []string {
	if m != nil {
		return m.Watchers
	}
	return nil
}

func (m *RepositoryWatchlist) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterType((*RepositoryConfig)(nil), "bread.RepositoryConfig")
	proto.RegisterType((*RepositoryWatchlist)(nil), "bread.RepositoryWatchlist")
}

func init() { proto.RegisterFile("repository.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4a, 0x2d, 0xc8,
	0x2f, 0xce, 0x2c, 0xc9, 0x2f, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x2a,
	0x4a, 0x4d, 0x4c, 0x51, 0xea, 0x62, 0xe4, 0x12, 0x08, 0x82, 0xcb, 0x39, 0xe7, 0xe7, 0xa5, 0x65,
	0xa6, 0x0b, 0x59, 0x71, 0x49, 0x16, 0xa5, 0x16, 0x96, 0x66, 0x16, 0xa5, 0xa6, 0xc4, 0x97, 0xa4,
	0x16, 0x97, 0x64, 0xe6, 0xa5, 0xc7, 0x17, 0x97, 0x24, 0x96, 0x94, 0x16, 0xa7, 0x16, 0x4b, 0x30,
	0x2a, 0x30, 0x6b, 0x70, 0x06, 0x89, 0xc3, 0x14, 0x84, 0x40, 0xe4, 0x83, 0xa1, 0xd2, 0x42, 0x56,
	0x5c, 0x5c, 0xe5, 0x89, 0x25, 0xc9, 0x19, 0x39, 0x99, 0xc5, 0x25, 0xc5, 0x12, 0x4c, 0x0a, 0xcc,
	0x1a, 0xdc, 0x46, 0x52, 0x7a, 0x60, 0xcb, 0xf4, 0x10, 0x16, 0x85, 0xc3, 0x94, 0x04, 0x21, 0xa9,
	0x56, 0x8a, 0xe6, 0x12, 0xc6, 0xa2, 0x44, 0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82,
	0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x16, 0x92, 0xe2, 0xe2, 0x00, 0x6b, 0x4c, 0x2d, 0x82,
	0x58, 0xc2, 0x19, 0x04, 0xe7, 0x0b, 0x89, 0x70, 0xb1, 0xa6, 0x65, 0xe6, 0xa4, 0x16, 0x4b, 0x30,
	0x83, 0x25, 0x20, 0x1c, 0x27, 0xce, 0x28, 0x76, 0xb0, 0x2b, 0x0a, 0x92, 0x92, 0xd8, 0xc0, 0x41,
	0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x10, 0xec, 0x0c, 0x34, 0x16, 0x01, 0x00, 0x00,
}
