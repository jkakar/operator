// Code generated by protoc-gen-operatord
package main

import (
	"fmt"
	"os"

	"github.com/sr/operator"
	"go.pedge.io/env"
	"google.golang.org/grpc"

	"chatops/ping"
)

func run() error {
	config, err := operator.NewConfigFromEnv()
	if err != nil {
		return err
	}
	grpcServer := grpc.NewServer()
	logger := operator.NewLogger()
	instrumenter := operator.NewInstrumenter(logger)
	server := operator.NewServer(grpcServer, config, logger, instrumenter)

	pingerEnv := &pinger.Env{}
	if err := env.Populate(pingerEnv); err != nil {
		server.LogServiceStartupError("pinger", err)
	} else {
		if pingerServer, err := pinger.NewAPIServer(pingerEnv); err != nil {
			server.LogServiceStartupError("pinger", err)
		} else {
			instrumented := &instrumentedpingerPinger{instrumenter, pingerServer}
			pinger.RegisterPingerServer(grpcServer, instrumented)
			server.LogServiceRegistered("pinger")
		}
	}

	return server.Serve()
}

func main() {
	if err := run(); err != nil {
		fmt.Fprintf(os.Stderr, "operatord: %s\n", err)
		os.Exit(1)
	}
}
