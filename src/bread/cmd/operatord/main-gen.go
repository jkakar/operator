// Code generated by protoc-gen-operatord
package main

import (
	"github.com/sr/operator"
	"golang.org/x/net/context"
	"google.golang.org/grpc"

	breadping "bread/ping"
)

func invoker(ctx context.Context, conn *grpc.ClientConn, req *operator.Request, args map[string]string) (bool, error) {
	if req.Call.Service == "breadping" {
		if req.Call.Method == "otp" {
			client := breadping.NewPingerClient(conn)
			_, err := client.Otp(
				ctx,
				&breadping.OtpRequest{
					Request: req,
				},
			)
			if err != nil {
				return true, err
			}
			return true, nil
		}
		if req.Call.Method == "ping" {
			client := breadping.NewPingerClient(conn)
			_, err := client.Ping(
				ctx,
				&breadping.PingRequest{
					Request: req,
					Arg1:    args["arg1"],
				},
			)
			if err != nil {
				return true, err
			}
			return true, nil
		}
		if req.Call.Method == "whoami" {
			client := breadping.NewPingerClient(conn)
			_, err := client.Whoami(
				ctx,
				&breadping.WhoamiRequest{
					Request: req,
				},
			)
			if err != nil {
				return true, err
			}
			return true, nil
		}
	}
	return false, nil
}
