// Code generated by protoc-gen-go.
// source: pb/bread.proto
// DO NOT EDIT!

/*
Package breadpb is a generated protocol buffer package.

It is generated from these files:
	pb/bread.proto
	pb/deploy.proto
	pb/ping.proto

It has these top-level messages:
	OperatorRequest
	OperatorMessage
	HTTPRequest
	ServerStartupNotice
	ServiceStartupError
	ListTargetsRequest
	ListBuildsRequest
	TriggerRequest
	OtpRequest
	PingRequest
	SlowLorisRequest
	WhoamiRequest
*/
package breadpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/duration"
import operator "github.com/sr/operator"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperatorRequest struct {
	Event   string            `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	Request *operator.Request `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	Message *OperatorMessage  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Error   string            `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
}

func (m *OperatorRequest) Reset()                    { *m = OperatorRequest{} }
func (m *OperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*OperatorRequest) ProtoMessage()               {}
func (*OperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OperatorRequest) GetRequest() *operator.Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *OperatorRequest) GetMessage() *OperatorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type OperatorMessage struct {
	Source *operator.Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Text   string           `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Html   string           `protobuf:"bytes,3,opt,name=html" json:"html,omitempty"`
}

func (m *OperatorMessage) Reset()                    { *m = OperatorMessage{} }
func (m *OperatorMessage) String() string            { return proto.CompactTextString(m) }
func (*OperatorMessage) ProtoMessage()               {}
func (*OperatorMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OperatorMessage) GetSource() *operator.Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type HTTPRequest struct {
	Method     string                    `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Path       string                    `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Query      map[string]string         `protobuf:"bytes,3,rep,name=query" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StatusCode uint32                    `protobuf:"varint,7,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Duration   *google_protobuf.Duration `protobuf:"bytes,8,opt,name=duration" json:"duration,omitempty"`
	Error      string                    `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *HTTPRequest) Reset()                    { *m = HTTPRequest{} }
func (m *HTTPRequest) String() string            { return proto.CompactTextString(m) }
func (*HTTPRequest) ProtoMessage()               {}
func (*HTTPRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HTTPRequest) GetQuery() map[string]string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *HTTPRequest) GetDuration() *google_protobuf.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type ServerStartupNotice struct {
	Address  string   `protobuf:"bytes,1,opt,name=Address,json=address" json:"Address,omitempty"`
	Protocol string   `protobuf:"bytes,2,opt,name=Protocol,json=protocol" json:"Protocol,omitempty"`
	Services []string `protobuf:"bytes,3,rep,name=services" json:"services,omitempty"`
}

func (m *ServerStartupNotice) Reset()                    { *m = ServerStartupNotice{} }
func (m *ServerStartupNotice) String() string            { return proto.CompactTextString(m) }
func (*ServerStartupNotice) ProtoMessage()               {}
func (*ServerStartupNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ServiceStartupError struct {
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ServiceStartupError) Reset()                    { *m = ServiceStartupError{} }
func (m *ServiceStartupError) String() string            { return proto.CompactTextString(m) }
func (*ServiceStartupError) ProtoMessage()               {}
func (*ServiceStartupError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*OperatorRequest)(nil), "bread.OperatorRequest")
	proto.RegisterType((*OperatorMessage)(nil), "bread.OperatorMessage")
	proto.RegisterType((*HTTPRequest)(nil), "bread.HTTPRequest")
	proto.RegisterType((*ServerStartupNotice)(nil), "bread.ServerStartupNotice")
	proto.RegisterType((*ServiceStartupError)(nil), "bread.ServiceStartupError")
}

func init() { proto.RegisterFile("pb/bread.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x51, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0xda, 0x6d, 0xd3, 0x4c, 0xc4, 0xb2, 0x18, 0xb4, 0x0a, 0x95, 0x80, 0x2a, 0xa7, 0x48,
	0x48, 0x29, 0xea, 0x0a, 0x69, 0xc5, 0x8d, 0x8f, 0x4a, 0x5c, 0x80, 0xc5, 0xdd, 0x13, 0x17, 0xe4,
	0x24, 0x43, 0x5b, 0xd1, 0xd6, 0x59, 0xdb, 0x89, 0xe8, 0x1f, 0xe1, 0xc4, 0x8f, 0x45, 0xb6, 0x27,
	0x4d, 0x6f, 0x7e, 0x33, 0x6f, 0xe6, 0xbd, 0x37, 0x86, 0xcb, 0xba, 0x98, 0x17, 0x0a, 0x45, 0x95,
	0xd7, 0x4a, 0x1a, 0xc9, 0x46, 0x0e, 0x4c, 0x5f, 0xae, 0xa5, 0x5c, 0xef, 0x70, 0xee, 0x8a, 0x45,
	0xf3, 0x6b, 0x5e, 0x35, 0x4a, 0x98, 0xad, 0x3c, 0x78, 0xda, 0xf4, 0x52, 0xd6, 0xa8, 0x84, 0x91,
	0xca, 0xe3, 0xf4, 0x5f, 0x00, 0x8f, 0xbf, 0x51, 0x89, 0xe3, 0x43, 0x83, 0xda, 0xb0, 0x67, 0x30,
	0xc2, 0x16, 0x0f, 0x26, 0x09, 0x66, 0x41, 0x16, 0x71, 0x0f, 0xd8, 0x6b, 0x08, 0x95, 0x27, 0x24,
	0x83, 0x59, 0x90, 0xc5, 0x8b, 0x27, 0xf9, 0x69, 0x17, 0x4d, 0xf2, 0x8e, 0xc1, 0xde, 0x40, 0xb8,
	0x47, 0xad, 0xc5, 0x1a, 0x93, 0xa1, 0x23, 0x5f, 0xe7, 0xde, 0x6c, 0xa7, 0xf5, 0xc5, 0x77, 0x79,
	0x47, 0x73, 0xa2, 0x4a, 0x49, 0x95, 0x5c, 0x90, 0xa8, 0x05, 0x69, 0xd9, 0xbb, 0xa3, 0x09, 0x96,
	0xc1, 0x58, 0xcb, 0x46, 0x95, 0xe8, 0xec, 0xc5, 0x8b, 0xab, 0xde, 0xc6, 0xca, 0xd5, 0x39, 0xf5,
	0x19, 0x83, 0x0b, 0x83, 0x7f, 0xbc, 0xdd, 0x88, 0xbb, 0xb7, 0xad, 0x6d, 0xcc, 0x7e, 0xe7, 0x5c,
	0x45, 0xdc, 0xbd, 0xd3, 0xbf, 0x03, 0x88, 0x3f, 0xdf, 0xdf, 0xdf, 0x75, 0xf9, 0xaf, 0x61, 0xbc,
	0x47, 0xb3, 0x91, 0x15, 0x1d, 0x80, 0x90, 0x9d, 0xad, 0x85, 0xd9, 0x74, 0xfb, 0xec, 0x9b, 0xdd,
	0xc0, 0xe8, 0xa1, 0x41, 0x75, 0x4c, 0x86, 0xb3, 0x61, 0x16, 0x2f, 0x5e, 0x50, 0xcc, 0xb3, 0x75,
	0xf9, 0x77, 0xdb, 0x5f, 0x1e, 0x8c, 0x3a, 0x72, 0xcf, 0x65, 0xaf, 0x20, 0xd6, 0x46, 0x98, 0x46,
	0xff, 0x2c, 0x65, 0x85, 0x49, 0x38, 0x0b, 0xb2, 0x47, 0x1c, 0x7c, 0xe9, 0xa3, 0xac, 0x90, 0xbd,
	0x85, 0x49, 0xf7, 0x6f, 0xc9, 0xc4, 0xa5, 0x7c, 0x9e, 0xfb, 0x8f, 0xcd, 0xbb, 0x8f, 0xcd, 0x3f,
	0x11, 0x81, 0x9f, 0xa8, 0xfd, 0x0d, 0xa3, 0xb3, 0x1b, 0x4e, 0x6f, 0x01, 0x7a, 0x0b, 0xec, 0x0a,
	0x86, 0xbf, 0xf1, 0x48, 0xc9, 0xec, 0xd3, 0x4e, 0xb5, 0x62, 0xd7, 0x20, 0xe5, 0xf2, 0xe0, 0xdd,
	0xe0, 0x36, 0x48, 0xd7, 0xf0, 0x74, 0x85, 0xaa, 0x45, 0xb5, 0x32, 0x42, 0x99, 0xa6, 0xfe, 0x2a,
	0xcd, 0xb6, 0x44, 0x96, 0x40, 0xf8, 0xbe, 0xaa, 0x14, 0x6a, 0x4d, 0x6b, 0x42, 0xe1, 0x21, 0x9b,
	0xc2, 0xe4, 0xce, 0xfa, 0x2b, 0xe5, 0x8e, 0xb6, 0x4d, 0x6a, 0xc2, 0xb6, 0xa7, 0x51, 0xb5, 0xdb,
	0x12, 0xb5, 0x3b, 0x56, 0xc4, 0x4f, 0x38, 0x5d, 0x7a, 0xa1, 0x6d, 0x89, 0xa4, 0xb4, 0xb4, 0xce,
	0xad, 0x10, 0x51, 0x3a, 0x21, 0x82, 0x7d, 0xd2, 0xc1, 0x59, 0xd2, 0x0f, 0xd1, 0x8f, 0xd0, 0x9d,
	0xbf, 0x2e, 0x8a, 0xb1, 0xd3, 0xbd, 0xf9, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x72, 0x18, 0x42, 0xe2,
	0x27, 0x03, 0x00, 0x00,
}
