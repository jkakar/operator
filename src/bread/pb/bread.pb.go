// Code generated by protoc-gen-go.
// source: pb/bread.proto
// DO NOT EDIT!

package breadpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"
import operator "github.com/sr/operator"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OperatorRequest struct {
	Request *operator.Request `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	Message *OperatorMessage  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Args    map[string]string `protobuf:"bytes,3,rep,name=args" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error   string            `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
}

func (m *OperatorRequest) Reset()                    { *m = OperatorRequest{} }
func (m *OperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*OperatorRequest) ProtoMessage()               {}
func (*OperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OperatorRequest) GetRequest() *operator.Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *OperatorRequest) GetMessage() *OperatorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *OperatorRequest) GetArgs() map[string]string {
	if m != nil {
		return m.Args
	}
	return nil
}

type OperatorMessage struct {
	Source *operator.Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Text   string           `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Html   string           `protobuf:"bytes,3,opt,name=html" json:"html,omitempty"`
}

func (m *OperatorMessage) Reset()                    { *m = OperatorMessage{} }
func (m *OperatorMessage) String() string            { return proto.CompactTextString(m) }
func (*OperatorMessage) ProtoMessage()               {}
func (*OperatorMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *OperatorMessage) GetSource() *operator.Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type HTTPRequest struct {
	Method     string                     `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Path       string                     `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Query      map[string]string          `protobuf:"bytes,3,rep,name=query" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StatusCode uint32                     `protobuf:"varint,7,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Duration   *google_protobuf1.Duration `protobuf:"bytes,8,opt,name=duration" json:"duration,omitempty"`
	Error      string                     `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *HTTPRequest) Reset()                    { *m = HTTPRequest{} }
func (m *HTTPRequest) String() string            { return proto.CompactTextString(m) }
func (*HTTPRequest) ProtoMessage()               {}
func (*HTTPRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *HTTPRequest) GetQuery() map[string]string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *HTTPRequest) GetDuration() *google_protobuf1.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type ServerStartupNotice struct {
	Address  string   `protobuf:"bytes,1,opt,name=Address,json=address" json:"Address,omitempty"`
	Protocol string   `protobuf:"bytes,2,opt,name=Protocol,json=protocol" json:"Protocol,omitempty"`
	Services []string `protobuf:"bytes,3,rep,name=services" json:"services,omitempty"`
}

func (m *ServerStartupNotice) Reset()                    { *m = ServerStartupNotice{} }
func (m *ServerStartupNotice) String() string            { return proto.CompactTextString(m) }
func (*ServerStartupNotice) ProtoMessage()               {}
func (*ServerStartupNotice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type ServiceStartupError struct {
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ServiceStartupError) Reset()                    { *m = ServiceStartupError{} }
func (m *ServiceStartupError) String() string            { return proto.CompactTextString(m) }
func (*ServiceStartupError) ProtoMessage()               {}
func (*ServiceStartupError) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func init() {
	proto.RegisterType((*OperatorRequest)(nil), "bread.OperatorRequest")
	proto.RegisterType((*OperatorMessage)(nil), "bread.OperatorMessage")
	proto.RegisterType((*HTTPRequest)(nil), "bread.HTTPRequest")
	proto.RegisterType((*ServerStartupNotice)(nil), "bread.ServerStartupNotice")
	proto.RegisterType((*ServiceStartupError)(nil), "bread.ServiceStartupError")
}

func init() { proto.RegisterFile("pb/bread.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xf3, 0xe5, 0x78, 0x22, 0x4a, 0x59, 0x50, 0x65, 0x22, 0x01, 0x56, 0x4e, 0x96, 0x90,
	0x1c, 0xd4, 0x82, 0xa8, 0xb8, 0x15, 0x88, 0xc4, 0x05, 0x28, 0x9b, 0x9e, 0xb8, 0xa0, 0xb5, 0x3d,
	0x38, 0x11, 0x49, 0xd7, 0x9d, 0x5d, 0x47, 0xe4, 0x8f, 0xf0, 0x4f, 0xb9, 0xa3, 0xfd, 0x70, 0x1c,
	0x71, 0xeb, 0x6d, 0xde, 0xcc, 0x9b, 0x99, 0x37, 0x4f, 0x03, 0x27, 0x75, 0x3e, 0xcf, 0x09, 0x45,
	0x99, 0xd5, 0x24, 0xb5, 0x64, 0x43, 0x0b, 0xa6, 0xcf, 0x2b, 0x29, 0xab, 0x0d, 0xce, 0x6d, 0x32,
	0x6f, 0x7e, 0xce, 0xcb, 0x86, 0x84, 0x5e, 0xcb, 0x5b, 0x47, 0x9b, 0x9e, 0xc8, 0x1a, 0x49, 0x68,
	0x49, 0x0e, 0xcf, 0xfe, 0x06, 0xf0, 0xf0, 0xab, 0x4f, 0x71, 0xbc, 0x6b, 0x50, 0x69, 0xf6, 0x12,
	0x42, 0x72, 0x61, 0x1c, 0x24, 0x41, 0x3a, 0x39, 0x7f, 0x94, 0x1d, 0xba, 0x3c, 0x87, 0xb7, 0x0c,
	0xf6, 0x0a, 0xc2, 0x2d, 0x2a, 0x25, 0x2a, 0x8c, 0x7b, 0x96, 0x7c, 0x96, 0x39, 0x59, 0xed, 0xd4,
	0xcf, 0xae, 0xca, 0x5b, 0x1a, 0x7b, 0x0d, 0x03, 0x41, 0x95, 0x8a, 0xfb, 0x49, 0x3f, 0x9d, 0x9c,
	0x27, 0xff, 0xd1, 0xfd, 0x82, 0xec, 0x8a, 0x2a, 0xb5, 0xb8, 0xd5, 0xb4, 0xe7, 0x96, 0xcd, 0x9e,
	0xc0, 0x10, 0x89, 0x24, 0xc5, 0x83, 0x24, 0x48, 0x23, 0xee, 0xc0, 0xf4, 0x2d, 0x44, 0x07, 0x22,
	0x3b, 0x85, 0xfe, 0x2f, 0xdc, 0x5b, 0xcd, 0x11, 0x37, 0xa1, 0x69, 0xda, 0x89, 0x4d, 0xe3, 0xa4,
	0x45, 0xdc, 0x81, 0x77, 0xbd, 0xcb, 0x60, 0x56, 0x74, 0x67, 0x7b, 0x81, 0x2c, 0x85, 0x91, 0x92,
	0x0d, 0x15, 0xe8, 0xaf, 0x3e, 0xed, 0xae, 0x5e, 0xda, 0x3c, 0xf7, 0x75, 0xc6, 0x60, 0xa0, 0xf1,
	0xb7, 0xf6, 0x53, 0x6d, 0x6c, 0x72, 0x2b, 0xbd, 0xdd, 0xc4, 0x7d, 0x97, 0x33, 0xf1, 0xec, 0x4f,
	0x0f, 0x26, 0x9f, 0x6e, 0x6e, 0xae, 0x5b, 0x63, 0xcf, 0x60, 0xb4, 0x45, 0xbd, 0x92, 0xa5, 0xd7,
	0xe8, 0x91, 0xe9, 0xad, 0x85, 0x5e, 0xb5, 0xf3, 0x4c, 0xcc, 0x2e, 0x60, 0x78, 0xd7, 0x20, 0xed,
	0xbd, 0x4d, 0xcf, 0xbc, 0x4d, 0x47, 0xe3, 0xb2, 0x6f, 0xa6, 0xee, 0x3c, 0x72, 0x5c, 0xf6, 0x02,
	0x26, 0x4a, 0x0b, 0xdd, 0xa8, 0x1f, 0x85, 0x2c, 0x31, 0x0e, 0x93, 0x20, 0x7d, 0xc0, 0xc1, 0xa5,
	0x3e, 0xc8, 0x12, 0xd9, 0x1b, 0x18, 0xb7, 0x0f, 0x11, 0x8f, 0xed, 0x95, 0x4f, 0x33, 0xf7, 0x31,
	0x59, 0xfb, 0x31, 0xd9, 0x47, 0x4f, 0xe0, 0x07, 0x6a, 0x67, 0x7e, 0x74, 0x6c, 0xfe, 0x25, 0x40,
	0x27, 0xe1, 0x5e, 0xee, 0x57, 0xf0, 0x78, 0x89, 0xb4, 0x43, 0x5a, 0x6a, 0x41, 0xba, 0xa9, 0xbf,
	0x48, 0xbd, 0x2e, 0x90, 0xc5, 0x10, 0x5e, 0x95, 0x25, 0xa1, 0x52, 0x7e, 0x4c, 0x28, 0x1c, 0x64,
	0x53, 0x18, 0x5f, 0x1b, 0x7d, 0x85, 0xdc, 0xf8, 0x69, 0xe3, 0xda, 0x63, 0x53, 0x53, 0x48, 0xbb,
	0x75, 0x81, 0xee, 0xa7, 0x22, 0x7e, 0xc0, 0xb3, 0x85, 0x5b, 0xb4, 0x2e, 0xd0, 0x6f, 0x5a, 0x18,
	0xe5, 0x66, 0x91, 0xa7, 0xb4, 0x8b, 0x3c, 0xec, 0x2e, 0xed, 0x1d, 0x5d, 0xfa, 0x3e, 0xfa, 0x1e,
	0x5a, 0xfb, 0xeb, 0x3c, 0x1f, 0xd9, 0xbd, 0x17, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x52,
	0x01, 0xa2, 0x80, 0x03, 0x00, 0x00,
}
