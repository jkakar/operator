{
  "name": "Changeling",
  "description": "HIPAA Compliance for Heroku Infrastructure",
  "keywords": [
    "hipaa",
    "pci",
    "compliance",
    "deployment"
  ],
  "addons": [
    "heroku-redis",
    "heroku-postgresql"
  ],
  "scripts": {
    "postdeploy": "bin/rake db:migrate",
    "test-setup": "bundle install --with test --local",
    "test": "bin/cibuild"
  },
  "env": {
    "APP_NAME": {
      "description": "The application name used by the coal_car gem for identifying this app",
      "value": "changeling"
    },
    "APPS_JSON_PASSWORD": {
      "description": "Token to access apps.json on components.heroku.tools",
      "value": "changethis"
    },
    "APPS_JSON_HOST": {
      "description": "Host to query for apps.json",
      "value": "components.heroku.tools"
    },
    "FERNET_SECRET": {
      "description": "The fernet secret to encrypt data at rest, specifically OAuth tokens.",
      "value": "unknown"
    },
    "GITHUB_OAUTH_ID": {
      "description": "The GitHub OAuth client id for being an OAuth consumer.",
      "value": "unknown"
    },
    "GITHUB_OAUTH_SECRET": {
      "description": "The GitHub OAuth client secret for being an OAuth consumer.",
      "value": "unknown"
    },
    "HEIMDALL_API_TOKEN": {
      "description": "The token for authorization headers in the heimdall API",
      "value": "fake-heimdall-api-token"
    },
    "HEIMDALL_API_URL": {
      "description": "The full URI of the heimdall for notifications",
      "value": "https://fake-heimdall.example.com"
    },
    "HTTP_BASIC_PASSWORD": {
      "description": "The basic auth password to interact with the Changeling API.",
      "value": "unknown"
    },
    "HTTP_BASIC_USERNAME": {
      "description": "The basic auth username to interact with the Changeling API.",
      "value": "unknown"
    },
    "LIBRATO_API_KEY": {
      "description": "Api key to interact with librato",
      "value": "unknown"
    },
    "LIBRATO_USER": {
      "description": "Librato user used to add events",
      "value": "unknown"
    },
    "RACK_ENV": {
      "description": "The rack environment used to differentiate production from staging in rollbar.",
      "value": "production"
    },
    "RAILS_ENV": {
      "description": "The rails environment used to differentiate production from staging in rollbar.",
      "value": "production"
    },
    "RAILS_SERVE_STATIC_FILES": {
      "description": "Whether or not rails should serve static assets from the ruby stack.",
      "value": "enabled"
    },
    "ROLLBAR_ACCESS_TOKEN": {
      "description": "Rollbar api token to submit errors.",
      "required": false
    },
    "SECRET_KEY_BASE": {
      "description": "The session secret used to encrypt and sign session cookies.",
      "generator": "secret"
    },
    "SENDGRID_PASSWORD": {
      "description": "The password for sending email through sendgrid",
      "required": false
    },
    "SENDGRID_USERNAME": {
      "description": "The username for sending email through sendgrid",
      "required": false
    },
    "TONITRUS_LOGIN": {
      "description": "Event stream login",
      "value": "unknown"
    },
    "TONITRUS_PASSWORD": {
      "description": "Event stream password",
      "value": "unknown"
    },
    "TONITRUS_ENVIRONMENT": {
      "description": "Event stream env",
      "value": "staging"
    },
    "WEBHOOK_API_TOKEN": {
      "description": "Api token used to use some api endpoints as a service",
      "generator": "secret"
    },
    "ZIPKIN_API_HOST": {
      "description": "Full URI with embedded basic auth credentials to post to your zipkin install",
      "required": false
    },
    "ZIPKIN_SAMPLE_RATE": {
      "description": "Percentage of traces to sample. 0.0 to 1.0",
      "value": "1.0"
    }
  }
}
