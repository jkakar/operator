// Code generated by protoc-gen-go.
// source: buildkite/buildkite.proto
// DO NOT EDIT!

/*
Package buildkite is a generated protocol buffer package.

It is generated from these files:
	buildkite/buildkite.proto

It has these top-level messages:
	BuildkiteServiceConfig
	StatusRequest
	StatusResponse
	ListBuildsRequest
	ListBuildsResponse
*/
package buildkite

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import operator "github.com/sr/operator"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type BuildkiteServiceConfig struct {
	ApiToken string `protobuf:"bytes,1,opt,name=api_token,json=apiToken" json:"api_token,omitempty"`
}

func (m *BuildkiteServiceConfig) Reset()                    { *m = BuildkiteServiceConfig{} }
func (m *BuildkiteServiceConfig) String() string            { return proto.CompactTextString(m) }
func (*BuildkiteServiceConfig) ProtoMessage()               {}
func (*BuildkiteServiceConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StatusRequest struct {
	Source *operator.Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	// Optional project slug.
	Slug string `protobuf:"bytes,2,opt,name=slug" json:"slug,omitempty"`
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StatusRequest) GetSource() *operator.Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type StatusResponse struct {
	Output *operator.Output `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StatusResponse) GetOutput() *operator.Output {
	if m != nil {
		return m.Output
	}
	return nil
}

type ListBuildsRequest struct {
	Source      *operator.Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	ProjectSlug string           `protobuf:"bytes,2,opt,name=project_slug,json=projectSlug" json:"project_slug,omitempty"`
}

func (m *ListBuildsRequest) Reset()                    { *m = ListBuildsRequest{} }
func (m *ListBuildsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListBuildsRequest) ProtoMessage()               {}
func (*ListBuildsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListBuildsRequest) GetSource() *operator.Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type ListBuildsResponse struct {
	Output *operator.Output `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
}

func (m *ListBuildsResponse) Reset()                    { *m = ListBuildsResponse{} }
func (m *ListBuildsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBuildsResponse) ProtoMessage()               {}
func (*ListBuildsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListBuildsResponse) GetOutput() *operator.Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*BuildkiteServiceConfig)(nil), "buildkite.BuildkiteServiceConfig")
	proto.RegisterType((*StatusRequest)(nil), "buildkite.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "buildkite.StatusResponse")
	proto.RegisterType((*ListBuildsRequest)(nil), "buildkite.ListBuildsRequest")
	proto.RegisterType((*ListBuildsResponse)(nil), "buildkite.ListBuildsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for BuildkiteService service

type BuildkiteServiceClient interface {
	// List the status of all (i.e. the status of the last build) of one or
	// all projects.
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// List the last builds of one or all projects, optionally limited to a
	// project.
	ListBuilds(ctx context.Context, in *ListBuildsRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error)
}

type buildkiteServiceClient struct {
	cc *grpc.ClientConn
}

func NewBuildkiteServiceClient(cc *grpc.ClientConn) BuildkiteServiceClient {
	return &buildkiteServiceClient{cc}
}

func (c *buildkiteServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc.Invoke(ctx, "/buildkite.BuildkiteService/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildkiteServiceClient) ListBuilds(ctx context.Context, in *ListBuildsRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := grpc.Invoke(ctx, "/buildkite.BuildkiteService/ListBuilds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BuildkiteService service

type BuildkiteServiceServer interface {
	// List the status of all (i.e. the status of the last build) of one or
	// all projects.
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	// List the last builds of one or all projects, optionally limited to a
	// project.
	ListBuilds(context.Context, *ListBuildsRequest) (*ListBuildsResponse, error)
}

func RegisterBuildkiteServiceServer(s *grpc.Server, srv BuildkiteServiceServer) {
	s.RegisterService(&_BuildkiteService_serviceDesc, srv)
}

func _BuildkiteService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildkiteServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildkite.BuildkiteService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildkiteServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildkiteService_ListBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBuildsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildkiteServiceServer).ListBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildkite.BuildkiteService/ListBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildkiteServiceServer).ListBuilds(ctx, req.(*ListBuildsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildkiteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "buildkite.BuildkiteService",
	HandlerType: (*BuildkiteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _BuildkiteService_Status_Handler,
		},
		{
			MethodName: "ListBuilds",
			Handler:    _BuildkiteService_ListBuilds_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x2a, 0xcd, 0xcc,
	0x49, 0xc9, 0xce, 0x2c, 0x49, 0xd5, 0x87, 0xb3, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38,
	0xe1, 0x02, 0x52, 0x7c, 0xf9, 0x05, 0xa9, 0x45, 0x89, 0x25, 0xf9, 0x45, 0x10, 0x29, 0x25, 0x53,
	0x2e, 0x31, 0x27, 0x98, 0x64, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x73, 0x7e, 0x5e, 0x5a,
	0x66, 0xba, 0x90, 0x34, 0x17, 0x67, 0x62, 0x41, 0x66, 0x7c, 0x49, 0x7e, 0x76, 0x6a, 0x9e, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x07, 0x50, 0x20, 0x04, 0xc4, 0x57, 0xf2, 0xe5, 0xe2, 0x0d,
	0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xd2, 0xe0, 0x62,
	0x2b, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0x05, 0x2b, 0xe5, 0x36, 0x12, 0xd0, 0x83, 0x5b, 0x14, 0x0c,
	0x16, 0x0f, 0x82, 0xca, 0x0b, 0x09, 0x71, 0xb1, 0x14, 0xe7, 0x94, 0xa6, 0x4b, 0x30, 0x81, 0x8d,
	0x04, 0xb3, 0x95, 0xac, 0xb8, 0xf8, 0x60, 0xc6, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x82, 0xcc,
	0xcb, 0x2f, 0x2d, 0x29, 0x28, 0x2d, 0xc1, 0x34, 0xcf, 0x1f, 0x2c, 0x1e, 0x04, 0x95, 0x57, 0x4a,
	0xe0, 0x12, 0xf4, 0xc9, 0x2c, 0x2e, 0x01, 0xfb, 0x82, 0x0c, 0xe7, 0x28, 0x72, 0xf1, 0x00, 0x43,
	0x22, 0x2b, 0x35, 0xb9, 0x24, 0x1e, 0xc9, 0x59, 0xdc, 0x50, 0xb1, 0x60, 0x90, 0xeb, 0xec, 0xb8,
	0x84, 0x90, 0x6d, 0x20, 0xd5, 0x85, 0x46, 0xab, 0x19, 0xb9, 0x04, 0xd0, 0x03, 0x59, 0xc8, 0x96,
	0x8b, 0x0d, 0xe2, 0x65, 0x21, 0x09, 0x3d, 0x44, 0x7c, 0xa1, 0x04, 0xaa, 0x94, 0x24, 0x16, 0x19,
	0xa8, 0xed, 0x9e, 0x5c, 0x5c, 0x08, 0x37, 0x09, 0xc9, 0x20, 0x29, 0xc4, 0x08, 0x0c, 0x29, 0x59,
	0x1c, 0xb2, 0x10, 0xa3, 0xa4, 0x78, 0x27, 0x35, 0x49, 0x22, 0x52, 0x48, 0x12, 0x1b, 0x38, 0x61,
	0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xcd, 0x52, 0x72, 0x50, 0x02, 0x00, 0x00,
}
