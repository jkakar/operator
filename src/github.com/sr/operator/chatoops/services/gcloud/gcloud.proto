syntax = "proto3";

import "operator.proto";

package gcloud;

service GcloudService {
	option (operator.name) = "gcloud";

	// Provision a development instance using the configured image.
	rpc CreateDevInstance(CreateDevInstanceRequest) returns (CreateDevInstanceResponse);
	// List all instances under the configured project.
	rpc ListInstances(ListInstancesRequest) returns (ListInstancesResponse);
	// Stop a running instance.
	rpc Stop(StopRequest) returns (StopResponse);
}

message GcloudServiceConfig {
	string project_id = 1;
	string default_zone = 2;
	string default_network = 3;
	// TODO(sr) Allow listing all available custom images
	// TODO(sr) Use the most recent image by default
	// TODO(sr) Allow to override this per request
	string default_image = 4;
	// TODO(sr) Allow overriding this via request parameter
	// TODO(sr) Provider map (e.g. small = n1-standard, large = n2-standard, ...)
	string default_machine_type = 5;
	string service_account_email = 6;
	string startup_script = 7;
}

message CreateDevInstanceRequest {
	operator.Source source = 1;
}

message CreateDevInstanceResponse {
	operator.Output output = 1;
}

message StopRequest {
	operator.Source source = 1;
	string instance = 2;
	string zone = 3;
}

message StopResponse {
	operator.Output output = 1;
}

message Instance {
	string id = 1;
	string name = 2;
	string status = 3;
	string zone = 4;
}

message ListInstancesRequest {
	operator.Source source = 1;
	string project_id = 2;
}

message ListInstancesResponse {
	operator.Output output = 1;
	operator.Source source = 2;
	repeated Instance objects = 3;
}
