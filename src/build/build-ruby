#!/usr/bin/env bash
#/ Usage: build-ruby [--no-lint] my-great-project
#/ Build a BREAD Ruby project. It must be located under the src/ tree and have
#/ a valid docker-compose.yml configuration file at its root.
set -euo pipefail
cd "$(dirname "$0")/../.."

print_help() {
    grep ^#/ <"$0" |cut -c4-
}

lint=true
project=""
while [ $# -gt 0 ]
do
    case "$1" in
        -h|--help)
            print_help
            exit 2
            ;;
        --no-lint)
            lint=false
            shift
            ;;
        *)
            project="$1"
            shift
            ;;
    esac
done

test -z "$project" && {
    print_help
    exit 2
}

dir="src/$project"
config="$dir/docker-compose.yml"

# Lint the code with RuboCop
if $lint
then docker-lint-ruby "$dir"
fi

test -f "${dir}/Gemfile.lock" && {
    docker run --rm -v "$(pwd):/data" -w "/data/$dir" \
        build/build bundle-audit check
}

test -d "${dir}/app/models" && {
    docker run --rm -v "$(pwd):/data" -w "/data/$dir" \
        build/build brakeman -A --table-width 260
}

# Assume it's a Rails app if there's a docker-compose.yml file
if test -f "$config"
then
    docker-compose -p "$project" -f "$config" build --pull
    # TODO(sr) Remove the sleep test...
    docker-compose -p "$project" -f "$config" run app sleep 30
    docker-compose -p "$project" -f "$config" run -e CI=1 app script/test
# Otherwise just build it as a normal Ruby library
else
    docker run --rm -v "$(pwd):/data" build/build build-ruby-lib "$dir"
fi
