// Code generated by protoc-gen-go.
// source: services/gcloud/gcloud.proto
// DO NOT EDIT!

/*
Package gcloud is a generated protocol buffer package.

It is generated from these files:
	services/gcloud/gcloud.proto

It has these top-level messages:
	Instance
	ListInstancesRequest
	ListInstancesResponse
*/
package gcloud

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto1 "github.com/sr/operator/src/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Instance struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Zone   string `protobuf:"bytes,4,opt,name=zone" json:"zone,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListInstancesRequest struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id" json:"project_id,omitempty"`
}

func (m *ListInstancesRequest) Reset()                    { *m = ListInstancesRequest{} }
func (m *ListInstancesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListInstancesRequest) ProtoMessage()               {}
func (*ListInstancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ListInstancesResponse struct {
	Output  *proto1.Output `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
	Objects []*Instance    `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
}

func (m *ListInstancesResponse) Reset()                    { *m = ListInstancesResponse{} }
func (m *ListInstancesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListInstancesResponse) ProtoMessage()               {}
func (*ListInstancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListInstancesResponse) GetOutput() *proto1.Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *ListInstancesResponse) GetObjects() []*Instance {
	if m != nil {
		return m.Objects
	}
	return nil
}

func init() {
	proto.RegisterType((*Instance)(nil), "gcloud.Instance")
	proto.RegisterType((*ListInstancesRequest)(nil), "gcloud.ListInstancesRequest")
	proto.RegisterType((*ListInstancesResponse)(nil), "gcloud.ListInstancesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for GCloudService service

type GCloudServiceClient interface {
	ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error)
}

type gCloudServiceClient struct {
	cc *grpc.ClientConn
}

func NewGCloudServiceClient(cc *grpc.ClientConn) GCloudServiceClient {
	return &gCloudServiceClient{cc}
}

func (c *gCloudServiceClient) ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error) {
	out := new(ListInstancesResponse)
	err := grpc.Invoke(ctx, "/gcloud.GCloudService/ListInstances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GCloudService service

type GCloudServiceServer interface {
	ListInstances(context.Context, *ListInstancesRequest) (*ListInstancesResponse, error)
}

func RegisterGCloudServiceServer(s *grpc.Server, srv GCloudServiceServer) {
	s.RegisterService(&_GCloudService_serviceDesc, srv)
}

func _GCloudService_ListInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ListInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GCloudServiceServer).ListInstances(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _GCloudService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gcloud.GCloudService",
	HandlerType: (*GCloudServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListInstances",
			Handler:    _GCloudService_ListInstances_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0xe9, 0x1f, 0x56, 0x1d, 0x5d, 0x91, 0xa1, 0xc2, 0x52, 0x5a, 0xd0, 0x3d, 0x89, 0x87,
	0x2d, 0xd4, 0x6f, 0xa0, 0x07, 0x11, 0x0a, 0x82, 0x9e, 0x3c, 0x88, 0x6c, 0xb7, 0x83, 0xac, 0x68,
	0x66, 0xcd, 0x4c, 0x3c, 0xf8, 0xe9, 0xcd, 0x26, 0xcd, 0x41, 0xb1, 0xa7, 0xf0, 0xe6, 0xbd, 0xbc,
	0xf9, 0x25, 0x30, 0x13, 0xb2, 0x5f, 0x6d, 0x43, 0xb2, 0x78, 0x6d, 0xde, 0xd9, 0x6d, 0xb6, 0x47,
	0xd5, 0x59, 0x56, 0xc6, 0x2c, 0xaa, 0xe9, 0x24, 0xc8, 0x05, 0x77, 0x64, 0x6b, 0x65, 0x1b, 0xdd,
	0xf2, 0x1a, 0xf6, 0xef, 0x8c, 0x68, 0x6d, 0x1a, 0x42, 0x80, 0x61, 0xbb, 0x29, 0x06, 0x67, 0x83,
	0x8b, 0x03, 0x3c, 0x82, 0xb1, 0xa9, 0x3f, 0xa8, 0x18, 0x06, 0x75, 0x0c, 0x99, 0xcf, 0xa8, 0x93,
	0x62, 0x94, 0xdc, 0x6f, 0x36, 0x54, 0x8c, 0x7b, 0x55, 0x5e, 0xc2, 0x64, 0xd5, 0x8a, 0xa6, 0x1e,
	0x79, 0xa0, 0x4f, 0x47, 0xa2, 0xe8, 0x0b, 0xfd, 0x92, 0x37, 0x6a, 0xf4, 0x25, 0xf5, 0x96, 0x4f,
	0x70, 0xfa, 0x27, 0x2b, 0x1d, 0x1b, 0x21, 0x9c, 0x43, 0xc6, 0x4e, 0x3b, 0xa7, 0x21, 0x78, 0xb8,
	0xcc, 0x23, 0x60, 0x75, 0x1f, 0x86, 0x78, 0x0e, 0x7b, 0xbc, 0xee, 0xab, 0xc4, 0x23, 0x8d, 0xbc,
	0x7f, 0x52, 0x6d, 0x5f, 0x99, 0xaa, 0x96, 0xcf, 0x90, 0xdf, 0xde, 0xf4, 0xa3, 0xc7, 0xf8, 0x1d,
	0xb8, 0x82, 0xfc, 0xd7, 0x2e, 0x9c, 0xa5, 0x3b, 0xff, 0xe1, 0x4e, 0xe7, 0x3b, 0xdc, 0x08, 0xb8,
	0xce, 0x02, 0xcf, 0xd5, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x16, 0x8a, 0x31, 0xea, 0x6e, 0x01,
	0x00, 0x00,
}
