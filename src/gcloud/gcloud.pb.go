// Code generated by protoc-gen-go.
// source: gcloud/gcloud.proto
// DO NOT EDIT!

/*
Package gcloud is a generated protocol buffer package.

It is generated from these files:
	gcloud/gcloud.proto

It has these top-level messages:
	Instance
	Output
	Operation
	ListInstancesRequest
	ListInstancesResponse
	ListOperationsRequest
	ListOperationsResponse
*/
package gcloud

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Instance struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Zone   string `protobuf:"bytes,4,opt,name=zone" json:"zone,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Output struct {
	PlainText string `protobuf:"bytes,1,opt,name=PlainText" json:"PlainText,omitempty"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Operation struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ListInstancesRequest struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id" json:"project_id,omitempty"`
}

func (m *ListInstancesRequest) Reset()                    { *m = ListInstancesRequest{} }
func (m *ListInstancesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListInstancesRequest) ProtoMessage()               {}
func (*ListInstancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListInstancesResponse struct {
	Output  *Output     `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
	Objects []*Instance `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
}

func (m *ListInstancesResponse) Reset()                    { *m = ListInstancesResponse{} }
func (m *ListInstancesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListInstancesResponse) ProtoMessage()               {}
func (*ListInstancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListInstancesResponse) GetOutput() *Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *ListInstancesResponse) GetObjects() []*Instance {
	if m != nil {
		return m.Objects
	}
	return nil
}

type ListOperationsRequest struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id" json:"project_id,omitempty"`
}

func (m *ListOperationsRequest) Reset()                    { *m = ListOperationsRequest{} }
func (m *ListOperationsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOperationsRequest) ProtoMessage()               {}
func (*ListOperationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ListOperationsResponse struct {
	Operations []*Operation `protobuf:"bytes,1,rep,name=operations" json:"operations,omitempty"`
}

func (m *ListOperationsResponse) Reset()                    { *m = ListOperationsResponse{} }
func (m *ListOperationsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOperationsResponse) ProtoMessage()               {}
func (*ListOperationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListOperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func init() {
	proto.RegisterType((*Instance)(nil), "gcloud.Instance")
	proto.RegisterType((*Output)(nil), "gcloud.Output")
	proto.RegisterType((*Operation)(nil), "gcloud.Operation")
	proto.RegisterType((*ListInstancesRequest)(nil), "gcloud.ListInstancesRequest")
	proto.RegisterType((*ListInstancesResponse)(nil), "gcloud.ListInstancesResponse")
	proto.RegisterType((*ListOperationsRequest)(nil), "gcloud.ListOperationsRequest")
	proto.RegisterType((*ListOperationsResponse)(nil), "gcloud.ListOperationsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for GCloudService service

type GCloudServiceClient interface {
	ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error)
	ListOperations(ctx context.Context, in *ListOperationsRequest, opts ...grpc.CallOption) (*ListOperationsResponse, error)
}

type gCloudServiceClient struct {
	cc *grpc.ClientConn
}

func NewGCloudServiceClient(cc *grpc.ClientConn) GCloudServiceClient {
	return &gCloudServiceClient{cc}
}

func (c *gCloudServiceClient) ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error) {
	out := new(ListInstancesResponse)
	err := grpc.Invoke(ctx, "/gcloud.GCloudService/ListInstances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gCloudServiceClient) ListOperations(ctx context.Context, in *ListOperationsRequest, opts ...grpc.CallOption) (*ListOperationsResponse, error) {
	out := new(ListOperationsResponse)
	err := grpc.Invoke(ctx, "/gcloud.GCloudService/ListOperations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GCloudService service

type GCloudServiceServer interface {
	ListInstances(context.Context, *ListInstancesRequest) (*ListInstancesResponse, error)
	ListOperations(context.Context, *ListOperationsRequest) (*ListOperationsResponse, error)
}

func RegisterGCloudServiceServer(s *grpc.Server, srv GCloudServiceServer) {
	s.RegisterService(&_GCloudService_serviceDesc, srv)
}

func _GCloudService_ListInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ListInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GCloudServiceServer).ListInstances(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _GCloudService_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ListOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GCloudServiceServer).ListOperations(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _GCloudService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gcloud.GCloudService",
	HandlerType: (*GCloudServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListInstances",
			Handler:    _GCloudService_ListInstances_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _GCloudService_ListOperations_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0x5b, 0xa2, 0x19, 0x6d, 0xb0, 0xeb, 0x1f, 0x42, 0xd5, 0xa2, 0x0b, 0x82, 0x28,
	0x54, 0xa8, 0x78, 0x16, 0xf4, 0x20, 0x42, 0x21, 0xa2, 0x9e, 0xbc, 0x48, 0x9a, 0x0e, 0x12, 0xa9,
	0xbb, 0x31, 0x3b, 0x11, 0xf5, 0x43, 0xf9, 0x19, 0xdd, 0xfc, 0xd9, 0x40, 0xa2, 0xe9, 0x29, 0xcc,
	0xce, 0xdb, 0x37, 0xbf, 0x37, 0x59, 0xd8, 0x7c, 0x09, 0x17, 0x32, 0x9d, 0x9f, 0x15, 0x9f, 0x71,
	0x9c, 0x48, 0x92, 0xcc, 0x2e, 0x2a, 0x7e, 0x05, 0xab, 0xb7, 0x42, 0x51, 0x20, 0x42, 0x64, 0x00,
	0x9d, 0x68, 0xee, 0x59, 0x07, 0xd6, 0xb1, 0xc3, 0xd6, 0xa1, 0x27, 0x82, 0x37, 0xf4, 0x3a, 0x79,
	0xe5, 0x82, 0xad, 0x35, 0x94, 0x2a, 0xaf, 0x6b, 0xba, 0xdf, 0x52, 0xa0, 0xd7, 0xcb, 0x2a, 0xbe,
	0x0b, 0xb6, 0x9f, 0x52, 0x9c, 0x12, 0x1b, 0x80, 0x73, 0xb7, 0x08, 0x22, 0xf1, 0x88, 0x9f, 0x54,
	0x18, 0xf1, 0x0b, 0x70, 0xfc, 0x18, 0x93, 0x80, 0x22, 0x29, 0x9a, 0x13, 0xe8, 0x2b, 0x6e, 0x99,
	0xc0, 0x4f, 0x60, 0x6b, 0x1a, 0x29, 0x32, 0x6c, 0xea, 0x1e, 0xdf, 0x53, 0x54, 0xc4, 0xb4, 0x85,
	0x0e, 0xf0, 0x8a, 0x21, 0x3d, 0x1b, 0x27, 0xfe, 0x04, 0xdb, 0x0d, 0xad, 0x8a, 0xa5, 0x50, 0xc8,
	0x46, 0x60, 0xcb, 0x1c, 0x2c, 0x17, 0xae, 0x4d, 0xdc, 0x71, 0xb9, 0x83, 0x12, 0xf7, 0x10, 0x56,
	0xe4, 0x2c, 0xf3, 0x52, 0x9a, 0xa2, 0xab, 0x05, 0x1b, 0x46, 0x60, 0xbc, 0xf8, 0x69, 0xe1, 0x5d,
	0x45, 0x58, 0x0a, 0x72, 0x09, 0x3b, 0x4d, 0x71, 0x49, 0x72, 0x04, 0x20, 0xab, 0x53, 0xad, 0xce,
	0x86, 0x0d, 0x2a, 0x1a, 0xd3, 0x99, 0xfc, 0x58, 0xd0, 0xbf, 0xb9, 0xce, 0x0e, 0x1f, 0x30, 0xf9,
	0x88, 0xf4, 0x3f, 0x99, 0x42, 0xbf, 0x96, 0x8d, 0xed, 0x99, 0x5b, 0xff, 0xad, 0x67, 0xb8, 0xdf,
	0xd2, 0x2d, 0x31, 0x7c, 0x70, 0xeb, 0x80, 0xac, 0x76, 0xe1, 0x4f, 0xca, 0xe1, 0xa8, 0xad, 0x5d,
	0x18, 0xce, 0xec, 0xfc, 0x35, 0x9d, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x82, 0xbb, 0x16, 0xe3,
	0x64, 0x02, 0x00, 0x00,
}
