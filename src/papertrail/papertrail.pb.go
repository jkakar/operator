// Code generated by protoc-gen-go.
// source: papertrail/papertrail.proto
// DO NOT EDIT!

/*
Package papertrail is a generated protocol buffer package.

It is generated from these files:
	papertrail/papertrail.proto

It has these top-level messages:
	SearchRequest
	SearchResponse
	LogEvent
*/
package papertrail

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto1 "github.com/sr/operator/src/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SearchRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SearchResponse struct {
	Output  *proto1.Output `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
	Objects []*LogEvent    `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchResponse) GetOutput() *proto1.Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *SearchResponse) GetObjects() []*LogEvent {
	if m != nil {
		return m.Objects
	}
	return nil
}

type LogEvent struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Source     string `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	Program    string `protobuf:"bytes,3,opt,name=program" json:"program,omitempty"`
	LogMessage string `protobuf:"bytes,4,opt,name=log_message" json:"log_message,omitempty"`
}

func (m *LogEvent) Reset()                    { *m = LogEvent{} }
func (m *LogEvent) String() string            { return proto.CompactTextString(m) }
func (*LogEvent) ProtoMessage()               {}
func (*LogEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*SearchRequest)(nil), "papertrail.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "papertrail.SearchResponse")
	proto.RegisterType((*LogEvent)(nil), "papertrail.LogEvent")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for PapertrailService service

type PapertrailServiceClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type papertrailServiceClient struct {
	cc *grpc.ClientConn
}

func NewPapertrailServiceClient(cc *grpc.ClientConn) PapertrailServiceClient {
	return &papertrailServiceClient{cc}
}

func (c *papertrailServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/papertrail.PapertrailService/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PapertrailService service

type PapertrailServiceServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterPapertrailServiceServer(s *grpc.Server, srv PapertrailServiceServer) {
	s.RegisterService(&_PapertrailService_serviceDesc, srv)
}

func _PapertrailService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PapertrailServiceServer).Search(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _PapertrailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "papertrail.PapertrailService",
	HandlerType: (*PapertrailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _PapertrailService_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x8f, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x69, 0xab, 0xa9, 0x4e, 0x49, 0xc5, 0xb5, 0x87, 0x18, 0x51, 0x4a, 0x40, 0xf0, 0x94,
	0x42, 0xfd, 0x01, 0x9e, 0xbc, 0x15, 0x14, 0x2b, 0x5e, 0x65, 0x1b, 0x87, 0x18, 0x69, 0x3b, 0xeb,
	0xec, 0x6c, 0xc1, 0x7f, 0xef, 0x76, 0x97, 0xda, 0x08, 0xbd, 0xbd, 0xfd, 0xde, 0xec, 0xcc, 0x7b,
	0x70, 0x65, 0xb4, 0x41, 0x16, 0xd6, 0xcd, 0x72, 0xb2, 0x97, 0xa5, 0x61, 0x12, 0x52, 0xb0, 0x27,
	0xf9, 0x28, 0xa0, 0x09, 0x79, 0xa0, 0x85, 0x38, 0x4e, 0x14, 0x37, 0x90, 0xce, 0x51, 0x73, 0xf5,
	0xf9, 0x82, 0xdf, 0x0e, 0xad, 0xa8, 0x14, 0x8e, 0xbd, 0xe0, 0x9f, 0xac, 0x33, 0xee, 0xdc, 0x9d,
	0x16, 0x6f, 0x30, 0xdc, 0xf9, 0xd6, 0xd0, 0xda, 0xa2, 0xba, 0x86, 0x84, 0x9c, 0x18, 0x27, 0x61,
	0x62, 0x30, 0x4d, 0xe3, 0xa6, 0xf2, 0x29, 0x40, 0x75, 0x0b, 0x7d, 0x5a, 0x7c, 0x61, 0x25, 0x36,
	0xeb, 0x8e, 0x7b, 0xde, 0x1f, 0x95, 0xad, 0x58, 0x33, 0xaa, 0x1f, 0x37, 0xb8, 0x96, 0x62, 0x06,
	0x27, 0x3b, 0xad, 0x00, 0xba, 0xcd, 0x47, 0xbc, 0xa7, 0x86, 0x90, 0x58, 0x72, 0x5c, 0xa1, 0xff,
	0xbd, 0x7d, 0x9f, 0x41, 0xdf, 0xaf, 0xaf, 0x59, 0xaf, 0xb2, 0x5e, 0x00, 0x17, 0x30, 0x58, 0x52,
	0xfd, 0xbe, 0x42, 0x6b, 0x75, 0x8d, 0xd9, 0xd1, 0x16, 0x4e, 0x5f, 0xe1, 0xfc, 0xf9, 0xef, 0xc8,
	0x1c, 0x79, 0xd3, 0x54, 0xa8, 0x1e, 0x20, 0x89, 0xd1, 0xd5, 0x65, 0x3b, 0xc2, 0xbf, 0xba, 0x79,
	0x7e, 0xc8, 0x8a, 0x4d, 0x17, 0x49, 0x28, 0x76, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x59,
	0x3e, 0x63, 0x63, 0x01, 0x00, 0x00,
}
