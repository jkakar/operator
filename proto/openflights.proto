syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package openflights;

// CSVStore stores information on flights in CSV format.
message CSVStore {
  bytes airports = 1;
  bytes airlines = 2;
  bytes routes = 3;
}

// IDStore stores maps from id to object.
message IDStore {
  map<string, Airport> id_to_airport = 1;
  map<string, Airline> id_to_airline = 2;
  map<string, Route> id_to_route = 3;
}

// DST represents the DST value for a timezone.
enum DST {
  DST_NONE = 0;
  DST_A = 1;
  DST_E = 2;
  DST_N = 3;
  DST_O = 4;
  DST_S = 5;
  DST_U = 6;
  DST_Z = 7;
}

// Airport represents an airport.
message Airport {
  string id = 1;
  string name = 2;
  string city = 3;
  string country = 4;
  string iata_faa = 5;
  string icao = 6;
  sint32 latitude_micros = 7;
  sint32 longitude_micros = 8;
  uint32 altitude_feet = 9;
  sint32 timezone_offset_minutes = 10;
  DST dst = 11;
  string timezone = 12;
}

// Airline represents an airline.
message Airline {
  string id = 1;
  string name = 2;
  string alias = 3;
  string iata = 4;
  string icao = 5;
  string callsign = 6;
  string country = 7;
  bool active = 8;
}

// Route represents a route.
message Route {
  string id = 1;
  Airline airline = 2;
  Airport source_airport = 3;
  Airport destination_airport = 4;
  bool codeshare = 5;
  uint32 stops = 6;
}

// Airports is the protobuf plural for Airport.
message Airports {
  repeated Airport airport = 1;
}

// Airlines is the protobuf plural for Airline.
message Airlines {
  repeated Airline airline = 1;
}

// Routes is the protobuf plural for Airport.
message Routes {
  repeated Route route = 1;
}

message GetAirportByIDRequest {
  string id = 1;
}

message GetAirlineByIDRequest {
  string id = 1;
}

message GetRouteByIDRequest {
  string id = 1;
}

message GetDistanceByIDRequest {
  string source_airport_id = 1;
  string destination_airport_id = 2;
}

message GetAirportByCodeRequest {
  string code = 1;
}

message GetAirlineByCodeRequest {
  string code = 1;
}

message GetRoutesByCodeRequest {
  string airline_code = 1;
  string source_airport_code = 2;
  string destination_airport_code = 3;
}

message GetDistanceByCodeRequest {
  string source_airport_code = 1;
  string destination_airport_code = 2;
}

service API {
  rpc GetAllAirports(google.protobuf.Empty) returns (Airports) {
    option (google.api.http) = {
      get: "/airports"
    };
  }
  rpc GetAllAirlines(google.protobuf.Empty) returns (Airlines) {
    option (google.api.http) = {
      get: "/airlines"
    };
  }
  rpc GetAllRoutes(google.protobuf.Empty) returns (Routes) {
    option (google.api.http) = {
      get: "/routes"
    };
  }
  rpc GetAirportByID(GetAirportByIDRequest) returns (Airport) {
    option (google.api.http) = {
      get: "/airports/id/{id}"
    };
  }
  rpc GetAirlineByID(GetAirlineByIDRequest) returns (Airline) {
    option (google.api.http) = {
      get: "/airlines/id/{id}"
    };
  }
  rpc GetRouteByID(GetRouteByIDRequest) returns (Route) {
    option (google.api.http) = {
      get: "/routes/id/{id}"
    };
  }
  rpc GetDistanceByID(GetDistanceByIDRequest) returns (google.protobuf.UInt32Value) {
    option (google.api.http) = {
      get: "/distance/id/{source_airport_id}/{destination_airport_id}"
    };
  }
  rpc GetAirportByCode(GetAirportByCodeRequest) returns (Airport) {
    option (google.api.http) = {
      get: "/airports/code/{code}"
    };
  }
  rpc GetAirlineByCode(GetAirlineByCodeRequest) returns (Airline) {
    option (google.api.http) = {
      get: "/airlines/code/{code}"
    };
  }
  rpc GetRoutesByCode(GetRoutesByCodeRequest) returns (Routes) {
    option (google.api.http) = {
      get: "/routes/code/{airline_code}/{source_airport_code}/{destination_airport_code}"
    };
  }
  rpc GetDistanceByCode(GetDistanceByCodeRequest) returns (google.protobuf.UInt32Value) {
    option (google.api.http) = {
      get: "/distance/code/{source_airport_code}/{destination_airport_code}"
    };
  }
}
