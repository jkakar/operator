#!/bin/sh
#/ Usage: . etc/build/env
#/ Defines various settings for use throughout the build and deploy scripts.
#/ Please keep variables sorted alphabetically.

# This file on the build machines defines variables USERNAME and PASSWORD.
envfile="/etc/env/artifactoryenv"
if test -f "$envfile"
then . /etc/env/artifactoryenv
else echo "WARN: $envfile not found" 2>&1
fi
: "${ARTIFACTORY_HOST:="artifactory.dev.pardot.com"}"
: "${ARTIFACTORY_URL:="https://${ARTIFACTORY_HOST}/artifactory"}"
: "${ARTIFACTORY_USERNAME:="${USERNAME:-""}"}"
: "${ARTIFACTORY_PASSWORD:="${PASSWORD:-""}"}"
: "${ARTIFACTORY_REPO_CANOE:="pd-canoe"}"
: "${ARTIFACTORY_REPO_GEM_LOCAL:="pd-gem-local"}"
export \
  ARTIFACTORY_HOST \
  ARTIFACTORY_URL \
  ARTIFACTORY_USERNAME \
  ARTIFACTORY_PASSWORD

: "${AWS_PROFILE:="pardotops"}"
: "${AWS_DEFAULT_REGION:="us-east-1"}"
export AWS_PROFILE AWS_DEFAULT_REGION

# Wrap Bamboo variables to make them easier to find and override.
# shellcheck disable=SC2154
: "${BAMBOO_PLAN_KEY:="${bamboo_planKey:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_REPO_URL:="${bamboo_planRepository_repositoryUrl:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_REPO_BRANCH_NAME:="${bamboo_repository_branch_name:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_SHORT_PLAN_KEY:="${bamboo_shortPlanKey:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_SHORT_JOB_KEY:="${bamboo_shortJobKey:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_BUILD_NUMBER:="${bamboo_buildNumber:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_BUILD_TIMESTAMP:="${bamboo_buildTimeStamp:-""}"}"
# shellcheck disable=SC2154
: "${BAMBOO_BUILD_RESULTS_URL:="${bamboo_buildResultsUrl:-""}"}"
: "${CI:="$BAMBOO_PLAN_KEY"}"
: "${CI_PROJECT:="$(echo "$BAMBOO_PLAN_KEY" | cut -d"-" -f1)"}"
: "${CI_PLAN:="${BAMBOO_SHORT_PLAN_KEY:-""}"}"
: "${CI_BUILD_NUMBER:="$BAMBOO_BUILD_NUMBER"}"
: "${CI_BRANCH:="$BAMBOO_REPO_BRANCH_NAME"}"

: "${CANOE_ECS_CLUSTER:="canoe_production"}"
: "${CANOE_ECS_SERVICE:="canoe"}"
: "${CANOE_ECR_REPO:="364709603225.dkr.ecr.us-east-1.amazonaws.com/canoe"}"

test -d "/etc/docker" && {
    DOCKER_CONFIG="/etc/docker"
    export DOCKER_CONFIG
}

true
